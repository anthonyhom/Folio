{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/CommentForm.js\";\nimport React from \"react\";\nimport \"../App.css\";\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      //keep the form from actually submitting\n      event.preventDefault();\n      console.log(\"submit working\"); //make the api call to the authentication page\n\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditPosts\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          userid: sessionStorage.getItem(\"user\"),\n          posttype: \"comment\",\n          posttext: this.state.post_text,\n          parentid: this.props.post\n        })\n      }).then(res => res.json()).then(result => {\n        console.log(this.state.post_text); // window.location.reload(false);\n        // update the count in the UI manually, to avoid a database hit\n        // this.props.onAddComment(this.props.commentCount + 1);\n      } // (error) => {\n      //   alert(\"error!\");\n      // }\n      );\n    };\n\n    this.myChangeHandler = event => {\n      this.setState({\n        post_text: event.target.value\n      });\n    };\n\n    this.state = {\n      post_text: \"\",\n      postmessage: \"\",\n      newComment: false\n    }; // this.postListing = React.createRef();\n  }\n\n  // follow_user(userid) {\n  //   FETCH;\n  // }\n  addCommentNotification(e) {\n    // var likedUser = this.props.post.user_id;\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        // userid: this.props.post.user_id,\n        artifacturl: sessionStorage.getItem(\"user\") + \"~@~\" + sessionStorage.getItem(\"dname\") + \" has left a comment on your post\",\n        artifacttype: \"comment\",\n        artifactcategory: \"NotificationNew\"\n      })\n    });\n    window.location.reload(false);\n    console.log(this.props.post.user_id);\n  }\n\n  componentDidMount() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\"\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.user_artifacts != null) {\n        this.setState({\n          liked: true,\n          artifactID: result.user_artifacts[0].artifact_id\n        });\n      } else {\n        this.setState({\n          liked: false\n        });\n      }\n    });\n  }\n\n  //not working for some reason. moved into addCommentNotification\n  // refresh() {\n  //   console.log(\"refresh working\");\n  //   window.location.reload(false);\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"10\",\n      cols: \"30\",\n      onChange: this.myChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: e => this.addCommentNotification(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/CommentForm.js"],"names":["React","CommentForm","Component","constructor","props","submitHandler","event","preventDefault","console","log","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","session_token","userid","posttype","posttext","state","post_text","parentid","post","then","res","json","result","myChangeHandler","setState","target","value","postmessage","newComment","addCommentNotification","e","artifacturl","artifacttype","artifactcategory","window","location","reload","componentDidMount","post_id","user_artifacts","liked","artifactID","artifact_id","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post_text: \"\",\n      postmessage: \"\",\n      newComment: false,\n    };\n    // this.postListing = React.createRef();\n  }\n\n  submitHandler = (event) => {\n    //keep the form from actually submitting\n    event.preventDefault();\n    console.log(\"submit working\");\n    //make the api call to the authentication page\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditPosts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        posttype: \"comment\",\n        posttext: this.state.post_text,\n        parentid: this.props.post,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(this.state.post_text);\n          // window.location.reload(false);\n          // update the count in the UI manually, to avoid a database hit\n          // this.props.onAddComment(this.props.commentCount + 1);\n        }\n        // (error) => {\n        //   alert(\"error!\");\n        // }\n      );\n  };\n  // follow_user(userid) {\n  //   FETCH;\n  // }\n  addCommentNotification(e) {\n    // var likedUser = this.props.post.user_id;\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        // userid: this.props.post.user_id,\n        artifacturl:\n          sessionStorage.getItem(\"user\") +\n          \"~@~\" +\n          sessionStorage.getItem(\"dname\") +\n          \" has left a comment on your post\",\n        artifacttype: \"comment\",\n        artifactcategory: \"NotificationNew\",\n      }),\n    });\n    window.location.reload(false);\n    console.log(this.props.post.user_id);\n  }\n  componentDidMount() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.user_artifacts != null) {\n          this.setState({\n            liked: true,\n            artifactID: result.user_artifacts[0].artifact_id,\n          });\n        } else {\n          this.setState({\n            liked: false,\n          });\n        }\n      });\n  }\n  myChangeHandler = (event) => {\n    this.setState({\n      post_text: event.target.value,\n    });\n  };\n  //not working for some reason. moved into addCommentNotification\n  // refresh() {\n  //   console.log(\"refresh working\");\n  //   window.location.reload(false);\n  // }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.submitHandler}>\n          <label>\n            <br />\n            <textarea rows=\"10\" cols=\"30\" onChange={this.myChangeHandler} />\n          </label>\n          <br />\n\n          <input\n            type=\"submit\"\n            value=\"submit\"\n            onClick={(e) => this.addCommentNotification(e)}\n          />\n          <br />\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}