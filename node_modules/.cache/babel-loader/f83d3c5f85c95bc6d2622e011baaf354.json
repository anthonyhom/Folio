{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/ExPosts.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport CommentForm from \"./CommentForm.js\";\nimport ProfileModal from \"./ProfileModal\";\nexport default class ExPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = e => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.getTitle = () => {\n      var separator = this.props.post.post_text.indexOf(\"~@~\");\n      this.state.title = this.props.post.post_text.substring(0, separator);\n      return this.state.title;\n    };\n\n    this.showProfileModal = e => {\n      if (sessionStorage.getItem(\"user\") !== this.props.post.user_id) {\n        this.setState({\n          showProfile: !this.state.showProfile\n        });\n      }\n    };\n\n    this.getCaption = () => {\n      var titleSep = this.props.post.post_text.indexOf(\"~@~\");\n      var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n\n      if (collabSep !== -1) {\n        //Some Collabs\n        this.state.caption = this.props.post.post_text.substring(titleSep + 3, collabSep);\n        return this.state.caption;\n      } else {\n        //No collabs\n        this.state.caption = this.props.post.post_text.substring(titleSep + 3, this.props.post.post_text.length);\n        return this.state.caption;\n      }\n    };\n\n    this.getCollab = () => {\n      var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n\n      if (collabSep !== -1) {\n        //Some Collabs\n        this.state.collab = this.props.post.post_text.substring(collabSep + 3, this.props.post.post_text.length);\n        return this.state.collab;\n      } else {\n        //No collabs\n        return \"\";\n      }\n    };\n\n    this.state = {\n      showModal: false,\n      comments: this.props.post.comment_flag,\n      title: \"\",\n      caption: \"\",\n      showProfile: false,\n      liked: false,\n      artifactID: \"\",\n      isNotBlocked: true,\n      publicPosts: true\n    };\n    this.post = React.createRef();\n  }\n\n  componentDidMount() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\"\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.user_artifacts != null) {\n        this.setState({\n          liked: true,\n          artifactID: result.user_artifacts[0].artifact_id\n        });\n      } else {\n        this.setState({\n          liked: false\n        });\n      }\n    });\n    this.checkBlockAndPrivate();\n  }\n\n  addLike(e) {\n    // var likedUser = this.props.post.user_id;\n    //Adds the notification for the other user\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: this.props.post.user_id,\n        artifacturl: sessionStorage.getItem(\"dname\") + \" has liked your post\",\n        artifacttype: \"like\",\n        artifactcategory: \"NotificationNew\"\n      })\n    }); //Add the crumb to the user who liked the post\n\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\",\n        artifactcategory: \"Like-Check\"\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        liked: true,\n        artifactID: result[\"Record Id\"]\n      }); // console.log(this.state.artifactID);\n    }); // console.log(this.props.post.user_id);\n  }\n\n  deleteLike(e) {\n    // console.log(this.state.artifactID);\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"deleteUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        artifactid: this.state.artifactID\n      })\n    }).then(res => res.json()).then(result => {});\n    this.setState({\n      liked: false,\n      artifactID: \"\"\n    });\n  }\n\n  getCommentCount() {\n    if (!this.state.comments || this.state.comments === \"0\") {\n      return 0;\n    }\n\n    return parseInt(this.state.comments);\n  }\n\n  checkBlockAndPrivate() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.user_id,\n        artifacttype: \"block-list2\"\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(result);\n      if (result.user_artifacts != null) {\n        this.setState({\n          isNotBlocked: false\n        });\n      } else {\n        this.setState({\n          isNotBlocked: true\n        });\n      }\n    });\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/usercontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUsers\",\n        userid: this.props.post.user_id,\n        status: \"private\"\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.users != null) {\n        this.setState({\n          publicPosts: false\n        });\n      }\n    });\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n\n    return \"comments hide\";\n  }\n\n  conditionalDisplay() {\n    console.log(\"Parent is \" + this.props.post.parent_id);\n\n    if (this.props.post.parent_id) {\n      return \"\";\n    } else {\n      return React.createElement(\"div\", {\n        className: \"comment-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-indicator-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.getCommentCount(), \" Comments\"), React.createElement(\"img\", {\n        src: require(\"../Images/comment.svg\"),\n        className: \"comment-icon\",\n        onClick: e => this.showModal(),\n        alt: \"View Comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.showHideComments(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(CommentForm, {\n        onAddComment: this.setCommentCount,\n        parent: this.props.post.post_id,\n        commentCount: this.getCommentCount(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })));\n    }\n  }\n\n  render() {\n    // console.log(this.props);\n    let like;\n\n    if (this.state.liked == false) {\n      like = React.createElement(\"button\", {\n        className: \"interact-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Like Button-empty\",\n        src: require(\"../Images/star.svg\"),\n        className: \"button-icon\",\n        onClick: e => this.addLike(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }));\n    } else {\n      like = React.createElement(\"button\", {\n        className: \"interact-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Like Button-liked\",\n        src: require(\"../Images/star-liked.svg\"),\n        className: \"button-icon\",\n        onClick: e => this.deleteLike(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: this.state.publicPosts ? \"card\" : \"no-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" row card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.post.user_id === sessionStorage.getItem(\"user\") ? \"my-username\" : \"username\",\n      onClick: e => this.showProfileModal(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, this.props.post.name)), React.createElement(\"div\", {\n      className: \"row card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"post-img\",\n      src: !this.props.post.post_pic_url || this.state.isNotBlocked === false ? require(\"../Images/blocked.jpg\") : this.props.post.post_pic_url,\n      alt: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \" row title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, !this.getTitle() || this.state.isNotBlocked === false ? \"You have blocked this user\" : this.getTitle())), React.createElement(\"div\", {\n      className: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, !this.getCaption() || this.state.isNotBlocked === false ? \"\" : this.getCaption()))), React.createElement(\"div\", {\n      className: \"row card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"# \"), this.props.post.post_type), React.createElement(\"div\", {\n      className: \"interact-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, like))), React.createElement(ProfileModal, {\n      show: this.state.showProfile,\n      onClose: e => this.showProfileModal(e),\n      userid: this.props.post.user_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/ExPosts.js"],"names":["React","CommentForm","ProfileModal","ExPost","Component","constructor","props","showModal","e","setState","state","getTitle","separator","post","post_text","indexOf","title","substring","showProfileModal","sessionStorage","getItem","user_id","showProfile","getCaption","titleSep","collabSep","caption","length","getCollab","collab","comments","comment_flag","liked","artifactID","isNotBlocked","publicPosts","createRef","componentDidMount","fetch","method","body","JSON","stringify","action","userid","artifacturl","post_id","artifacttype","then","res","json","result","user_artifacts","artifact_id","checkBlockAndPrivate","addLike","session_token","artifactcategory","deleteLike","artifactid","getCommentCount","parseInt","status","users","showHideComments","conditionalDisplay","console","log","parent_id","require","setCommentCount","render","like","name","post_pic_url","post_type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport CommentForm from \"./CommentForm.js\";\nimport ProfileModal from \"./ProfileModal\";\n\nexport default class ExPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      comments: this.props.post.comment_flag,\n      title: \"\",\n      caption: \"\",\n      showProfile: false,\n      liked: false,\n      artifactID: \"\",\n      isNotBlocked: true,\n      publicPosts: true,\n    };\n    this.post = React.createRef();\n  }\n  componentDidMount() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.user_artifacts != null) {\n          this.setState({\n            liked: true,\n            artifactID: result.user_artifacts[0].artifact_id,\n          });\n        } else {\n          this.setState({\n            liked: false,\n          });\n        }\n      });\n    this.checkBlockAndPrivate();\n  }\n  addLike(e) {\n    // var likedUser = this.props.post.user_id;\n    //Adds the notification for the other user\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: this.props.post.user_id,\n        artifacturl: sessionStorage.getItem(\"dname\") + \" has liked your post\",\n        artifacttype: \"like\",\n        artifactcategory: \"NotificationNew\",\n      }),\n    });\n    //Add the crumb to the user who liked the post\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\",\n        artifactcategory: \"Like-Check\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          liked: true,\n          artifactID: result[\"Record Id\"],\n        });\n        // console.log(this.state.artifactID);\n      });\n\n    // console.log(this.props.post.user_id);\n  }\n  deleteLike(e) {\n    // console.log(this.state.artifactID);\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"deleteUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        artifactid: this.state.artifactID,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {});\n    this.setState({\n      liked: false,\n      artifactID: \"\",\n    });\n  }\n  showModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  };\n\n  getCommentCount() {\n    if (!this.state.comments || this.state.comments === \"0\") {\n      return 0;\n    }\n    return parseInt(this.state.comments);\n  }\n  checkBlockAndPrivate() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.user_id,\n        artifacttype: \"block-list2\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        if (result.user_artifacts != null) {\n          this.setState({\n            isNotBlocked: false,\n          });\n        } else {\n          this.setState({\n            isNotBlocked: true,\n          });\n        }\n      });\n\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/usercontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUsers\",\n        userid: this.props.post.user_id,\n        status: \"private\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.users != null) {\n          this.setState({\n            publicPosts: false,\n          });\n        }\n      });\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n    return \"comments hide\";\n  }\n\n  conditionalDisplay() {\n    console.log(\"Parent is \" + this.props.post.parent_id);\n    if (this.props.post.parent_id) {\n      return \"\";\n    } else {\n      return (\n        <div className=\"comment-block\">\n          <div className=\"comment-indicator\">\n            <div className=\"comment-indicator-text\">\n              {this.getCommentCount()} Comments\n            </div>\n            <img\n              src={require(\"../Images/comment.svg\")}\n              className=\"comment-icon\"\n              onClick={(e) => this.showModal()}\n              alt=\"View Comments\"\n            />\n          </div>\n          <div className={this.showHideComments()}>\n            <CommentForm\n              onAddComment={this.setCommentCount}\n              parent={this.props.post.post_id}\n              commentCount={this.getCommentCount()}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  getTitle = () => {\n    var separator = this.props.post.post_text.indexOf(\"~@~\");\n    this.state.title = this.props.post.post_text.substring(0, separator);\n    return this.state.title;\n  };\n\n  showProfileModal = (e) => {\n    if (sessionStorage.getItem(\"user\") !== this.props.post.user_id) {\n      this.setState({\n        showProfile: !this.state.showProfile,\n      });\n    }\n  };\n\n  getCaption = () => {\n    var titleSep = this.props.post.post_text.indexOf(\"~@~\");\n    var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n    if (collabSep !== -1) {\n      //Some Collabs\n      this.state.caption = this.props.post.post_text.substring(\n        titleSep + 3,\n        collabSep\n      );\n      return this.state.caption;\n    } else {\n      //No collabs\n      this.state.caption = this.props.post.post_text.substring(\n        titleSep + 3,\n        this.props.post.post_text.length\n      );\n      return this.state.caption;\n    }\n  };\n\n  getCollab = () => {\n    var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n    if (collabSep !== -1) {\n      //Some Collabs\n      this.state.collab = this.props.post.post_text.substring(\n        collabSep + 3,\n        this.props.post.post_text.length\n      );\n      return this.state.collab;\n    } else {\n      //No collabs\n      return \"\";\n    }\n  };\n\n  render() {\n    // console.log(this.props);\n\n    let like;\n    if (this.state.liked == false) {\n      like = (\n        <button className=\"interact-button\">\n          <img\n            alt=\"Like Button-empty\"\n            src={require(\"../Images/star.svg\")}\n            className=\"button-icon\"\n            onClick={(e) => this.addLike()}\n          />\n        </button>\n      );\n    } else {\n      like = (\n        <button className=\"interact-button\">\n          <img\n            alt=\"Like Button-liked\"\n            src={require(\"../Images/star-liked.svg\")}\n            className=\"button-icon\"\n            onClick={(e) => this.deleteLike()}\n          />\n        </button>\n      );\n    }\n\n    return (\n      <div className={this.state.publicPosts ? \"card\" : \"no-display\"}>\n        <div className=\" row card-header\">\n          <div\n            className={\n              this.props.post.user_id === sessionStorage.getItem(\"user\")\n                ? \"my-username\"\n                : \"username\"\n            }\n            onClick={(e) => this.showProfileModal(e)}\n          >\n            {this.props.post.name}\n          </div>\n        </div>\n        <div className=\"row card-body\">\n          <img\n            className=\"post-img\"\n            src={\n              !this.props.post.post_pic_url || this.state.isNotBlocked === false\n                ? require(\"../Images/blocked.jpg\")\n                : this.props.post.post_pic_url\n            }\n            alt=\"post\"\n          />\n          <div className=\" row title\">\n          <h4>{\n                !this.getTitle() || this.state.isNotBlocked === false\n                  ? \"You have blocked this user\"\n                  : this.getTitle()\n                }</h4>\n          </div>\n          <div className=\"caption\">\n          <p>{\n                !this.getCaption() || this.state.isNotBlocked === false\n                ? \"\"\n                : this.getCaption()\n            }</p>\n          </div>\n        </div>\n        <div className=\"row card-footer\">\n          <div className=\"tag\">\n            <p>\n              <b># </b>\n              {this.props.post.post_type}\n            </p>\n            <div className=\"interact-button\">{like}</div>\n          </div>\n        </div>\n        <ProfileModal\n          show={this.state.showProfile}\n          onClose={(e) => this.showProfileModal(e)}\n          userid={this.props.post.user_id}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}