{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/ExploreFilter.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport \"../css/Explore.css\";\nimport PostingList from \"./PostForm.js\";\nimport PostForm from \"./PostForm.js\";\nimport Post from \"./Post.js\";\nimport ExplorePostsList from \"./ExplorePostsList.js\"; // const formValid = ({ formErrors, ...rest }) => {\n//   let valid = true;\n//   Object.values(formErrors).forEach(val => {\n//     val.length > 0 && (valid = false);\n//   });\n//   Object.values(rest).forEach(val => {\n//     val === null && (valid = false);\n//   });\n//   return valid;\n// };\n\nexport default class ExploreFilter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinput: \"null\" // tagged_ids: []\n\n    };\n  } // createPost = event => {\n  //   this.state.title = this.state.title.concat(\"~@~\");\n  //   this.state.caption = this.state.title.concat(this.state.caption);\n  //   //keep the form from actually submitting\n  //   event.preventDefault();\n  //   if (formValid(this.state)) {\n  //     //make the api call to the authentication page\n  //     fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n  //       method: \"post\",\n  //       body: JSON.stringify({\n  //         action: \"addOrEditPosts\",\n  //         user_id: sessionStorage.getItem(\"user\"),\n  //         session_token: sessionStorage.getItem(\"token\"),\n  //         posttext: this.state.caption,\n  //         postpicurl: this.state.url,\n  //         posttype: this.state.tag\n  //       })\n  //     })\n  //       .then(res => res.json())\n  //       .then(\n  //         result => {\n  //           this.setState({\n  //             apiReturnMessage: result.Status\n  //             // post_id: result.Status.slice(-2)\n  //           });\n  //           // this.addTitle();\n  //           // this.addTag();\n  //           this.props.loadPosts();\n  //           this.onClose();\n  //         },\n  //         error => {\n  //           alert(\"error!\");\n  //         }\n  //       );\n  //   }\n  // };\n\n\n  setUserInput(type, exploreForm, e) {\n    this.setState({\n      userinput: type\n    }); // console.log(\"its working\");\n  }\n\n  render() {\n    let search = require(\"../Images/search.svg\");\n\n    let exploreForm = React.createRef();\n\n    if (this.state.userinput === \"Art\") {\n      getUserTags(this.state.userinput);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag-button\",\n        onClick: e => this.setUserInput(null, exploreForm, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Back\"), React.createElement(ExplorePostsList, {\n        valueFromParent: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    } else if (this.state.userinput === \"Music\") {\n      getUserTags(this.state.userinput);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag-button\",\n        onClick: e => this.setUserInput(null, exploreForm, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Back\"), React.createElement(ExplorePostsList, {\n        valueFromParent: \"Music\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    } else if (this.state.userinput === \"Writing\") {\n      getUserTags(this.state.userinput);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag-button\",\n        onClick: e => this.setUserInput(null, exploreForm, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Back\"), React.createElement(ExplorePostsList, {\n        valueFromParent: \"Writing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    } else if (this.state.userinput === \"Code\") {\n      //getUserTags(this.state.userinput);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag-button\",\n        onClick: e => this.setUserInput(null, exploreForm, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Back\"), React.createElement(ExplorePostsList, {\n        valueFromParent: \"Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n    } else if (this.state.userinput === \"Film\") {\n      getUserTags(this.state.userinput);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tag-button\",\n        onClick: e => this.setUserInput(null, exploreForm, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Back\"), React.createElement(ExplorePostsList, {\n        valueFromParent: \"Film\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Explore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"tag-button\",\n      onClick: e => this.setUserInput(\"Art\", this.exploreForm, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Art\"), React.createElement(\"button\", {\n      className: \"tag-button\",\n      onClick: e => this.setUserInput(\"Music\", this.exploreForm, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Music\"), React.createElement(\"button\", {\n      className: \"tag-button\",\n      onClick: e => this.setUserInput(\"Writing\", this.exploreForm, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Writing\"), React.createElement(\"button\", {\n      className: \"tag-button\",\n      onClick: e => this.setUserInput(\"Code\", this.exploreForm, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Code\"), React.createElement(\"button\", {\n      className: \"tag-button\",\n      onClick: e => this.setUserInput(\"Film\", this.exploreForm, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Film\"), React.createElement(ExplorePostsList, {\n      valueFromParent: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction getUserTags(input) {\n  // api call to get users posts or just the tags idk\n  fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n    method: \"post\",\n    body: JSON.stringify({\n      action: \"getPosts\",\n      max_posts: \"10\",\n      posttype: input\n    })\n  });\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/ExploreFilter.js"],"names":["React","PostingList","PostForm","Post","ExplorePostsList","ExploreFilter","Component","constructor","props","state","userinput","setUserInput","type","exploreForm","e","setState","render","search","require","createRef","getUserTags","input","fetch","method","body","JSON","stringify","action","max_posts","posttype"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport \"../css/Explore.css\";\nimport PostingList from \"./PostForm.js\";\nimport PostForm from \"./PostForm.js\";\nimport Post from \"./Post.js\";\nimport ExplorePostsList from \"./ExplorePostsList.js\";\n\n// const formValid = ({ formErrors, ...rest }) => {\n//   let valid = true;\n\n//   Object.values(formErrors).forEach(val => {\n//     val.length > 0 && (valid = false);\n//   });\n\n//   Object.values(rest).forEach(val => {\n//     val === null && (valid = false);\n//   });\n\n//   return valid;\n// };\n\nexport default class ExploreFilter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinput: \"null\",\n      // tagged_ids: []\n    };\n  }\n  // createPost = event => {\n  //   this.state.title = this.state.title.concat(\"~@~\");\n  //   this.state.caption = this.state.title.concat(this.state.caption);\n\n  //   //keep the form from actually submitting\n  //   event.preventDefault();\n\n  //   if (formValid(this.state)) {\n  //     //make the api call to the authentication page\n  //     fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n  //       method: \"post\",\n  //       body: JSON.stringify({\n  //         action: \"addOrEditPosts\",\n  //         user_id: sessionStorage.getItem(\"user\"),\n  //         session_token: sessionStorage.getItem(\"token\"),\n  //         posttext: this.state.caption,\n  //         postpicurl: this.state.url,\n  //         posttype: this.state.tag\n  //       })\n  //     })\n  //       .then(res => res.json())\n  //       .then(\n  //         result => {\n  //           this.setState({\n  //             apiReturnMessage: result.Status\n  //             // post_id: result.Status.slice(-2)\n  //           });\n\n  //           // this.addTitle();\n  //           // this.addTag();\n\n  //           this.props.loadPosts();\n  //           this.onClose();\n  //         },\n  //         error => {\n  //           alert(\"error!\");\n  //         }\n  //       );\n  //   }\n  // };\n  setUserInput(type, exploreForm, e) {\n    this.setState({\n      userinput: type,\n    });\n    // console.log(\"its working\");\n  }\n  render() {\n    let search = require(\"../Images/search.svg\");\n    let exploreForm = React.createRef();\n\n    if (this.state.userinput === \"Art\") {\n      getUserTags(this.state.userinput);\n      return (\n        <div>\n          <button\n            className=\"tag-button\"\n            onClick={(e) => this.setUserInput(null, exploreForm, e)}\n          >\n            Back\n          </button>\n          <ExplorePostsList valueFromParent={\"Art\"} />\n        </div>\n      );\n    } else if (this.state.userinput === \"Music\") {\n      getUserTags(this.state.userinput);\n      return (\n        <div>\n          <button\n            className=\"tag-button\"\n            onClick={(e) => this.setUserInput(null, exploreForm, e)}\n          >\n            Back\n          </button>\n          <ExplorePostsList valueFromParent={\"Music\"} />\n        </div>\n      );\n    } else if (this.state.userinput === \"Writing\") {\n      getUserTags(this.state.userinput);\n      return (\n        <div>\n          <button\n            className=\"tag-button\"\n            onClick={(e) => this.setUserInput(null, exploreForm, e)}\n          >\n            Back\n          </button>\n          <ExplorePostsList valueFromParent={\"Writing\"} />\n        </div>\n      );\n    } else if (this.state.userinput === \"Code\") {\n      //getUserTags(this.state.userinput);\n      return (\n        <div>\n          <button\n            className=\"tag-button\"\n            onClick={(e) => this.setUserInput(null, exploreForm, e)}\n          >\n            Back\n          </button>\n          <ExplorePostsList valueFromParent={\"Code\"} />\n        </div>\n      );\n    } else if (this.state.userinput === \"Film\") {\n      getUserTags(this.state.userinput);\n      return (\n        <div>\n          <button\n            className=\"tag-button\"\n            onClick={(e) => this.setUserInput(null, exploreForm, e)}\n          >\n            Back\n          </button>\n          <ExplorePostsList valueFromParent={\"Film\"} />\n        </div>\n      );\n    }\n    return (\n      <div className=\"Explore\">\n        {/* <p>Does this even work</p> */}\n        <button\n          className=\"tag-button\"\n          onClick={(e) => this.setUserInput(\"Art\", this.exploreForm, e)}\n        >\n          Art\n        </button>\n        <button\n          className=\"tag-button\"\n          onClick={(e) => this.setUserInput(\"Music\", this.exploreForm, e)}\n        >\n          Music\n        </button>\n        <button\n          className=\"tag-button\"\n          onClick={(e) => this.setUserInput(\"Writing\", this.exploreForm, e)}\n        >\n          Writing\n        </button>\n        <button\n          className=\"tag-button\"\n          onClick={(e) => this.setUserInput(\"Code\", this.exploreForm, e)}\n        >\n          Code\n        </button>\n        <button\n          className=\"tag-button\"\n          onClick={(e) => this.setUserInput(\"Film\", this.exploreForm, e)}\n        >\n          Film\n        </button>\n        <ExplorePostsList valueFromParent={null} />\n        {/* <PostingList ref={this.postingList} type=\"postingList\" /> */}\n        {/* This is where the search bar component will be maybe something like\n          <SearchBar > */}\n      </div>\n    );\n  }\n}\n\nfunction getUserTags(input) {\n  // api call to get users posts or just the tags idk\n  fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n    method: \"post\",\n    body: JSON.stringify({\n      action: \"getPosts\",\n      max_posts: \"10\",\n      posttype: input,\n    }),\n  });\n}\n"]},"metadata":{},"sourceType":"module"}