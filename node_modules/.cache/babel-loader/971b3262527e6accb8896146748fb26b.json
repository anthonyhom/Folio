{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/EditPost.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport \"../css/modal.css\";\nimport \"../css/postform.css\";\nimport PropTypes from \"prop-types\";\nconst urlRegex = new RegExp(/(?:(?:https?:\\/\\/))[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b(?:[-a-zA-Z0-9@:%_\\+.~#?&\\/=]*(\\.jpg|\\.png|\\.jpeg))/g);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nexport default class EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.createPost = event => {\n      this.state.title = this.state.title.concat(\"~@~\");\n\n      if (this.state.collab !== \"\") {\n        this.state.caption = this.state.caption.concat(\"~*~\");\n        this.state.caption = this.state.title.concat(this.state.caption.concat(this.state.collab));\n      } else {\n        this.state.caption = this.state.title.concat(this.state.caption);\n      } //keep the form from actually submitting\n\n\n      event.preventDefault();\n\n      if (formValid(this.state)) {\n        //make the api call to the authentication page\n        fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"addOrEditPosts\",\n            user_id: sessionStorage.getItem(\"user\"),\n            userid: sessionStorage.getItem(\"user\"),\n            session_token: sessionStorage.getItem(\"token\"),\n            postid: this.state.postid,\n            timestamp: this.state.time,\n            posttext: this.state.caption,\n            postpicurl: this.state.url,\n            posttype: this.state.tag\n          })\n        }).then(res => res.json()).then(result => {\n          if (result.Status === \"SUCCESS - Updated 1 Rows\") {\n            window.location.reload(false);\n          } else {\n            console.log(result.Status);\n          }\n        }, error => {\n          alert(\"error!\");\n        });\n      }\n    };\n\n    this.state = {\n      postid: this.props.postId,\n      title: this.props.title,\n      caption: this.props.text,\n      collab: this.props.collab,\n      tag: this.props.tag,\n      url: this.props.pic,\n      time: this.props.time,\n      isDisabled: true,\n      formErrors: {\n        title: \"\",\n        caption: \"\",\n        tag: \"\",\n        url: \"\"\n      }\n    };\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    let formErrors = this.state.formErrors;\n\n    switch (name) {\n      case \"title\":\n        formErrors.title = value.length < 2 ? \"Required\" : \"\";\n        break;\n\n      case \"caption\":\n        formErrors.caption = value.length < 2 ? \"Required\" : \"\";\n        break;\n\n      case \"tag\":\n        formErrors.tag = value === \"\" ? \"Required\" : \"\";\n        break;\n\n      case \"url\":\n        formErrors.url = urlRegex.test(value) ? \"\" : \"invalid image URL\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    });\n    this.setState({\n      formErrors,\n      isDisabled: !formValid(this.state)\n    });\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      id: \"myModal\",\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Edit your project\")), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"modalcontent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.createPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Name of the Project: \"), React.createElement(\"input\", {\n      className: formErrors.title.length > 0 ? \"error\" : null,\n      name: \"title\",\n      placeholder: this.props.title,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), formErrors.title.length > 0 && React.createElement(\"span\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, formErrors.title)), React.createElement(\"div\", {\n      className: \"data-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Caption: \"), React.createElement(\"textarea\", {\n      className: formErrors.caption.length > 0 ? \"error\" : null,\n      type: \"text\",\n      name: \"caption\",\n      placeholder: this.props.text,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), formErrors.caption.length > 0 && React.createElement(\"span\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, formErrors.caption)), React.createElement(\"div\", {\n      className: \"data-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Collaborators: \"), React.createElement(\"input\", {\n      name: \"collab\",\n      placeholder: this.props.collab,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"data-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Tags: \"), React.createElement(\"select\", {\n      className: formErrors.tag.length > 0 ? \"error\" : null,\n      name: \"tag\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.props.tag), React.createElement(\"option\", {\n      value: \"Art\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Art\"), React.createElement(\"option\", {\n      value: \"Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Code\"), React.createElement(\"option\", {\n      value: \"Music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Music\"), React.createElement(\"option\", {\n      value: \"Film\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Film\"), React.createElement(\"option\", {\n      value: \"Writing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Writing\")), formErrors.tag.length > 0 && React.createElement(\"span\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, formErrors.tag)), React.createElement(\"div\", {\n      className: \"data-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"URL To Picture: \"), React.createElement(\"input\", {\n      className: formErrors.url.length > 0 ? \"error\" : null,\n      name: \"url\",\n      placeholder: this.props.pic,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), formErrors.url.length > 0 && React.createElement(\"span\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, formErrors.url))))), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.isDisabled,\n      className: \"button post-button\",\n      onClick: this.createPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Update\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/EditPost.js"],"names":["React","PropTypes","urlRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","EditPost","Component","constructor","props","onClose","e","createPost","event","state","title","concat","collab","caption","preventDefault","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","userid","session_token","postid","timestamp","time","posttext","postpicurl","url","posttype","tag","then","res","json","result","Status","window","location","reload","console","log","error","alert","postId","text","pic","isDisabled","handleChange","name","value","target","test","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport \"../css/modal.css\";\nimport \"../css/postform.css\";\nimport PropTypes from \"prop-types\";\n\nconst urlRegex = new RegExp(\n  /(?:(?:https?:\\/\\/))[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b(?:[-a-zA-Z0-9@:%_\\+.~#?&\\/=]*(\\.jpg|\\.png|\\.jpeg))/g\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  Object.values(rest).forEach((val) => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nexport default class EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postid: this.props.postId,\n      title: this.props.title,\n      caption: this.props.text,\n      collab: this.props.collab,\n      tag: this.props.tag,\n      url: this.props.pic,\n      time: this.props.time,\n      isDisabled: true,\n\n      formErrors: {\n        title: \"\",\n        caption: \"\",\n        tag: \"\",\n        url: \"\",\n      },\n    };\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  createPost = (event) => {\n    this.state.title = this.state.title.concat(\"~@~\");\n\n    if (this.state.collab !== \"\") {\n      this.state.caption = this.state.caption.concat(\"~*~\");\n      this.state.caption = this.state.title.concat(\n        this.state.caption.concat(this.state.collab)\n      );\n    } else {\n      this.state.caption = this.state.title.concat(this.state.caption);\n    }\n\n    //keep the form from actually submitting\n    event.preventDefault();\n\n    if (formValid(this.state)) {\n      //make the api call to the authentication page\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditPosts\",\n          user_id: sessionStorage.getItem(\"user\"),\n          userid: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          postid: this.state.postid,\n          timestamp: this.state.time,\n          posttext: this.state.caption,\n          postpicurl: this.state.url,\n          posttype: this.state.tag,\n        }),\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            if (result.Status === \"SUCCESS - Updated 1 Rows\") {\n              window.location.reload(false);\n            } else {\n              console.log(result.Status);\n            }\n          },\n          (error) => {\n            alert(\"error!\");\n          }\n        );\n    }\n  };\n\n  handleChange(e) {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = this.state.formErrors;\n\n    switch (name) {\n      case \"title\":\n        formErrors.title = value.length < 2 ? \"Required\" : \"\";\n        break;\n      case \"caption\":\n        formErrors.caption = value.length < 2 ? \"Required\" : \"\";\n        break;\n      case \"tag\":\n        formErrors.tag = value === \"\" ? \"Required\" : \"\";\n        break;\n      case \"url\":\n        formErrors.url = urlRegex.test(value) ? \"\" : \"invalid image URL\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value });\n\n    this.setState({ formErrors, isDisabled: !formValid(this.state) });\n  }\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div id=\"myModal\" className=\"modal\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <span className=\"close\" onClick={this.onClose}>\n              &times;\n            </span>\n            <h2>Edit your project</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div id=\"modalcontent\">\n              <form onSubmit={this.createPost}>\n                <div className=\"data-input\">\n                  <div className=\"data-label\">Name of the Project: </div>\n                  <input\n                    className={formErrors.title.length > 0 ? \"error\" : null}\n                    name=\"title\"\n                    placeholder={this.props.title}\n                    onChange={(e) => this.handleChange(e)}\n                  ></input>\n                  {formErrors.title.length > 0 && (\n                    <span className=\"error-message\">{formErrors.title}</span>\n                  )}\n                </div>\n\n                <div className=\"data-input\">\n                  <div className=\"data-label\">Caption: </div>\n                  <textarea\n                    className={formErrors.caption.length > 0 ? \"error\" : null}\n                    type=\"text\"\n                    name=\"caption\"\n                    placeholder={this.props.text}\n                    onChange={(e) => this.handleChange(e)}\n                  />\n                  {formErrors.caption.length > 0 && (\n                    <span className=\"error-message\">{formErrors.caption}</span>\n                  )}\n                </div>\n\n                <div className=\"data-input\">\n                  <div className=\"data-label\">Collaborators: </div>\n                  <input\n                    name=\"collab\"\n                    placeholder={this.props.collab}\n                    onChange={(e) => this.handleChange(e)}\n                  ></input>\n                </div>\n\n                <div className=\"data-input\">\n                  <div className=\"data-label\">Tags: </div>\n                  <select\n                    className={formErrors.tag.length > 0 ? \"error\" : null}\n                    name=\"tag\"\n                    onChange={(e) => this.handleChange(e)}\n                  >\n                    <option value=\"\">{this.props.tag}</option>\n                    <option value=\"Art\">Art</option>\n                    <option value=\"Code\">Code</option>\n                    <option value=\"Music\">Music</option>\n                    <option value=\"Film\">Film</option>\n                    <option value=\"Writing\">Writing</option>\n                  </select>\n                  {formErrors.tag.length > 0 && (\n                    <span className=\"error-message\">{formErrors.tag}</span>\n                  )}\n                </div>\n\n                <div className=\"data-input\">\n                  <div className=\"data-label\">URL To Picture: </div>\n                  <input\n                    className={formErrors.url.length > 0 ? \"error\" : null}\n                    name=\"url\"\n                    placeholder={this.props.pic}\n                    onChange={(e) => this.handleChange(e)}\n                  ></input>\n                  {formErrors.url.length > 0 && (\n                    <span className=\"error-message\">{formErrors.url}</span>\n                  )}\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div className=\"modal-footer\">\n            <button\n              type=\"submit\"\n              disabled={this.state.isDisabled}\n              className=\"button post-button\"\n              onClick={this.createPost}\n            >\n              <span>Update</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}