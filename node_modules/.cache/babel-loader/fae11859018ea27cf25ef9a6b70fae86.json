{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/PostingList.js\";\nimport React from \"react\";\nimport Post from \"./Post.js\";\nimport SuggestionCard from \"./SuggestionCard.js\";\nimport \"../css/suggestedusers.css\";\nimport \"../css/suggestiongrid.css\";\nexport default class PostingList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkConnections = () => {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getConnections\",\n          userid: sessionStorage.getItem(\"user\")\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.connections !== undefined) {\n          this.setState({\n            hasConnections: true\n          });\n        }\n      });\n    };\n\n    this.changeConnection = e => {\n      if (this.state.u1Status === \"Unfollow\") {\n        // console.log(\"HERE\");\n        fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: 438\n          })\n        }).then(res => res.json()).then(result => {\n          if (!result.connections) {\n            return fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n              method: \"post\",\n              body: JSON.stringify({\n                action: \"addOrEditConnections\",\n                user_id: sessionStorage.getItem(\"user\"),\n                session_token: sessionStorage.getItem(\"token\"),\n                userid: sessionStorage.getItem(\"user\"),\n                connectuserid: 438\n              })\n            }).then(res => res.json()).then(result => {\n              if (result.Status.includes(\"SUCCESS\")) {\n                window.location.reload(false);\n              }\n            });\n          }\n        });\n      }\n\n      if (this.state.u2Status === \"Unfollow\") {\n        fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: 439\n          })\n        }).then(res => res.json()).then(result => {\n          if (!result.connections) {\n            return fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n              method: \"post\",\n              body: JSON.stringify({\n                action: \"addOrEditConnections\",\n                user_id: sessionStorage.getItem(\"user\"),\n                session_token: sessionStorage.getItem(\"token\"),\n                userid: sessionStorage.getItem(\"user\"),\n                connectuserid: 439\n              })\n            }).then(res => res.json()).then(result => {\n              if (result.Status.includes(\"SUCCESS\")) {\n                window.location.reload(false);\n              }\n            });\n          }\n        });\n      }\n\n      if (this.state.u3Status === \"Unfollow\") {\n        fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: 440\n          })\n        }).then(res => res.json()).then(result => {\n          if (!result.connections) {\n            return fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n              method: \"post\",\n              body: JSON.stringify({\n                action: \"addOrEditConnections\",\n                user_id: sessionStorage.getItem(\"user\"),\n                session_token: sessionStorage.getItem(\"token\"),\n                userid: sessionStorage.getItem(\"user\"),\n                connectuserid: 440\n              })\n            }).then(res => res.json()).then(result => {\n              if (result.Status.includes(\"SUCCESS\")) {\n                window.location.reload(false);\n              }\n            });\n          }\n        });\n      } // console.log(this.state.success);\n      // if (this.state.success) {\n      //   console.log(\"HERE\");\n      // }\n      // if (buttonStatus === \"Unfollow\") {\n      //   fetch(\n      //     \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n      //     {\n      //       method: \"post\",\n      //       body: JSON.stringify({\n      //         action: \"getConnections\",\n      //         userid: sessionStorage.getItem(\"user\"),\n      //         connectuserid: userID,\n      //       }),\n      //     }\n      //   )\n      //     .then((res) => res.json())\n      //     .then((result) => {\n      //       let connectionId = result.connections[0].connection_id;\n      //       return fetch(\n      //         \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n      //         {\n      //           method: \"post\",\n      //           body: JSON.stringify({\n      //             action: \"deleteConnections\",\n      //             user_id: sessionStorage.getItem(\"user\"),\n      //             session_token: sessionStorage.getItem(\"token\"),\n      //             connectionid: connectionId,\n      //           }),\n      //         }\n      //       )\n      //         .then((res) => res.json())\n      //         .then((result) => {\n      //           if (result.Status.includes(\"SUCCESS\")) {\n      //             if (userID === \"438\") {\n      //               this.setState({\n      //                 u1Status: \"Follow\",\n      //               });\n      //             } else if (userID === \"439\") {\n      //               this.setState({\n      //                 u2Status: \"Follow\",\n      //               });\n      //             } else if (userID === \"440\") {\n      //               this.setState({\n      //                 u3Status: \"Follow\",\n      //               });\n      //             }\n      //           }\n      //         });\n      //     });\n      // } else {\n      //   fetch(\n      //     \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n      //     {\n      //       method: \"post\",\n      //       body: JSON.stringify({\n      //         action: \"getConnections\",\n      //         userid: sessionStorage.getItem(\"user\"),\n      //         connectuserid: userID,\n      //       }),\n      //     }\n      //   )\n      //     .then((res) => res.json())\n      //     .then((result) => {\n      //       if (!result.connections) {\n      //         return fetch(\n      //           \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n      //           {\n      //             method: \"post\",\n      //             body: JSON.stringify({\n      //               action: \"addOrEditConnections\",\n      //               user_id: sessionStorage.getItem(\"user\"),\n      //               session_token: sessionStorage.getItem(\"token\"),\n      //               userid: sessionStorage.getItem(\"user\"),\n      //               connectuserid: userID,\n      //             }),\n      //           }\n      //         )\n      //           .then((res) => res.json())\n      //           .then((result) => {\n      //             if (result.Status.includes(\"SUCCESS\")) {\n      //               if (userID === \"438\") {\n      //                 this.setState({\n      //                   u1Status: \"Unfollow\",\n      //                 });\n      //               } else if (userID === \"439\") {\n      //                 this.setState({\n      //                   u2Status: \"Unfollow\",\n      //                 });\n      //               } else if (userID === \"440\") {\n      //                 this.setState({\n      //                   u3Status: \"Unfollow\",\n      //                 });\n      //               }\n      //             }\n      //           });\n      //       }\n      //     });\n      // }\n\n    };\n\n    this.changeButton = (button, buttonState) => {\n      if (buttonState === \"Follow\") {\n        if (button === \"u1Status\") {\n          this.setState({\n            u1Status: \"Unfollow\"\n          });\n        } else if (button === \"u2Status\") {\n          this.setState({\n            u2Status: \"Unfollow\"\n          });\n        }\n\n        if (button === \"u3Status\") {\n          this.setState({\n            u3Status: \"Unfollow\"\n          });\n        }\n      } else if (buttonState === \"Unfollow\") {\n        if (button === \"u1Status\") {\n          this.setState({\n            u1Status: \"Follow\"\n          });\n        } else if (button === \"u2Status\") {\n          this.setState({\n            u2Status: \"Follow\"\n          });\n        }\n\n        if (button === \"u3Status\") {\n          this.setState({\n            u3Status: \"Follow\"\n          });\n        }\n      }\n    };\n\n    this.state = {\n      error: null,\n      hasConnections: false,\n      u1Status: \"Follow\",\n      u2Status: \"Follow\",\n      u3Status: \"Follow\",\n      success: false\n    };\n  }\n\n  render() {\n    const {\n      error,\n      posts\n    } = this.props;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \" Error: \", error.message, \" \");\n    } else if (this.state.hasConnections === false) {\n      this.checkConnections();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"You are currently not following anyone. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), \" Here are some suggested users to follow:\"), React.createElement(\"div\", {\n        className: \"suggested-user-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-pic-container\",\n        style: {\n          margin: \"15px\",\n          border: \"1px solid #dbdbdb\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"profile-pic\",\n        src: \"https://image.shutterstock.com/image-photo/portrait-photo-person-project-concept-260nw-507830914.jpg\",\n        alt: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"sug-user-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Jon Smith\"), React.createElement(\"div\", {\n        className: \"sug-bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Hello! My name is Jon Smith. I am a programmer currently employed at Microsoft. I like to make websites, and have been working on web dev for 5 years now. I hope you guys enjoy some of my work here!\")), React.createElement(\"div\", {\n        className: \"btn-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"follow-btn\",\n        onClick: () => this.changeButton(\"u1Status\", this.state.u1Status),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, this.state.u1Status)))), React.createElement(\"div\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-pic-container\",\n        style: {\n          margin: \"15px\",\n          border: \"1px solid #dbdbdb\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"profile-pic\",\n        src: \"https://t4.ftcdn.net/jpg/02/89/99/33/240_F_289993382_QJID0KDhWhwp8JX3llcoD8V9jDKAZnpq.jpg\",\n        alt: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"sug-user-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"Tessa Samson\"), React.createElement(\"div\", {\n        className: \"sug-bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Hello! My name is Tessa! I make music! I am a Music teacher at an Elementary School. I love to explore different genres of music and create unique sounding songs.\")), React.createElement(\"div\", {\n        className: \"btn-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"follow-btn\",\n        onClick: () => this.changeButton(\"u2Status\", this.state.u2Status),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, this.state.u2Status)))), React.createElement(\"div\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-pic-container\",\n        style: {\n          margin: \"15px\",\n          border: \"1px solid #dbdbdb\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"profile-pic\",\n        src: \"https://media.gettyimages.com/photos/portrait-of-japanese-man-picture-id650171629\",\n        alt: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"sug-user-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Suki Ryo\"), React.createElement(\"div\", {\n        className: \"sug-bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"Hello! My name is Suki! I am a Japanese Film Maker. I like to explore stories of Horror and Thriller.\")), React.createElement(\"div\", {\n        className: \"btn-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"follow-btn\",\n        onClick: () => this.changeButton(\"u3Status\", this.state.u3Status),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, this.state.u3Status))))), React.createElement(\"button\", {\n        className: \"confirm-btn\",\n        onClick: e => this.changeConnection(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Let's Start!\")));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, posts.map(post => React.createElement(Post, {\n        key: post.post_id,\n        post: post,\n        type: this.props.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/PostingList.js"],"names":["React","Post","SuggestionCard","PostingList","Component","constructor","props","checkConnections","fetch","method","body","JSON","stringify","action","userid","sessionStorage","getItem","then","res","json","result","connections","undefined","setState","hasConnections","changeConnection","e","state","u1Status","connectuserid","user_id","session_token","Status","includes","window","location","reload","u2Status","u3Status","changeButton","button","buttonState","error","success","render","posts","message","margin","border","map","post","post_id","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Post from \"./Post.js\";\nimport SuggestionCard from \"./SuggestionCard.js\";\nimport \"../css/suggestedusers.css\";\nimport \"../css/suggestiongrid.css\";\n\nexport default class PostingList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      hasConnections: false,\n      u1Status: \"Follow\",\n      u2Status: \"Follow\",\n      u3Status: \"Follow\",\n      success: false,\n    };\n  }\n\n  checkConnections = () => {\n    fetch(\n      \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n      {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getConnections\",\n          userid: sessionStorage.getItem(\"user\"),\n        }),\n      }\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.connections !== undefined) {\n          this.setState({\n            hasConnections: true,\n          });\n        }\n      });\n  };\n\n  changeConnection = (e) => {\n    if (this.state.u1Status === \"Unfollow\") {\n      // console.log(\"HERE\");\n      fetch(\n        \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n        {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: 438,\n          }),\n        }\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (!result.connections) {\n            return fetch(\n              \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n              {\n                method: \"post\",\n                body: JSON.stringify({\n                  action: \"addOrEditConnections\",\n                  user_id: sessionStorage.getItem(\"user\"),\n                  session_token: sessionStorage.getItem(\"token\"),\n                  userid: sessionStorage.getItem(\"user\"),\n                  connectuserid: 438,\n                }),\n              }\n            )\n              .then((res) => res.json())\n              .then((result) => {\n                if (result.Status.includes(\"SUCCESS\")) {\n                  window.location.reload(false);\n                }\n              });\n          }\n        });\n    }\n    if (this.state.u2Status === \"Unfollow\") {\n      fetch(\n        \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n        {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: 439,\n          }),\n        }\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (!result.connections) {\n            return fetch(\n              \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n              {\n                method: \"post\",\n                body: JSON.stringify({\n                  action: \"addOrEditConnections\",\n                  user_id: sessionStorage.getItem(\"user\"),\n                  session_token: sessionStorage.getItem(\"token\"),\n                  userid: sessionStorage.getItem(\"user\"),\n                  connectuserid: 439,\n                }),\n              }\n            )\n              .then((res) => res.json())\n              .then((result) => {\n                if (result.Status.includes(\"SUCCESS\")) {\n                  window.location.reload(false);\n                }\n              });\n          }\n        });\n    }\n    if (this.state.u3Status === \"Unfollow\") {\n      fetch(\n        \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n        {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: 440,\n          }),\n        }\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (!result.connections) {\n            return fetch(\n              \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n              {\n                method: \"post\",\n                body: JSON.stringify({\n                  action: \"addOrEditConnections\",\n                  user_id: sessionStorage.getItem(\"user\"),\n                  session_token: sessionStorage.getItem(\"token\"),\n                  userid: sessionStorage.getItem(\"user\"),\n                  connectuserid: 440,\n                }),\n              }\n            )\n              .then((res) => res.json())\n              .then((result) => {\n                if (result.Status.includes(\"SUCCESS\")) {\n                  window.location.reload(false);\n                }\n              });\n          }\n        });\n    }\n\n    // console.log(this.state.success);\n    // if (this.state.success) {\n    //   console.log(\"HERE\");\n    // }\n\n    // if (buttonStatus === \"Unfollow\") {\n    //   fetch(\n    //     \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n    //     {\n    //       method: \"post\",\n    //       body: JSON.stringify({\n    //         action: \"getConnections\",\n    //         userid: sessionStorage.getItem(\"user\"),\n    //         connectuserid: userID,\n    //       }),\n    //     }\n    //   )\n    //     .then((res) => res.json())\n    //     .then((result) => {\n    //       let connectionId = result.connections[0].connection_id;\n\n    //       return fetch(\n    //         \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n    //         {\n    //           method: \"post\",\n    //           body: JSON.stringify({\n    //             action: \"deleteConnections\",\n    //             user_id: sessionStorage.getItem(\"user\"),\n    //             session_token: sessionStorage.getItem(\"token\"),\n    //             connectionid: connectionId,\n    //           }),\n    //         }\n    //       )\n    //         .then((res) => res.json())\n    //         .then((result) => {\n    //           if (result.Status.includes(\"SUCCESS\")) {\n    //             if (userID === \"438\") {\n    //               this.setState({\n    //                 u1Status: \"Follow\",\n    //               });\n    //             } else if (userID === \"439\") {\n    //               this.setState({\n    //                 u2Status: \"Follow\",\n    //               });\n    //             } else if (userID === \"440\") {\n    //               this.setState({\n    //                 u3Status: \"Follow\",\n    //               });\n    //             }\n    //           }\n    //         });\n    //     });\n    // } else {\n    //   fetch(\n    //     \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n    //     {\n    //       method: \"post\",\n    //       body: JSON.stringify({\n    //         action: \"getConnections\",\n    //         userid: sessionStorage.getItem(\"user\"),\n    //         connectuserid: userID,\n    //       }),\n    //     }\n    //   )\n    //     .then((res) => res.json())\n    //     .then((result) => {\n    //       if (!result.connections) {\n    //         return fetch(\n    //           \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n    //           {\n    //             method: \"post\",\n    //             body: JSON.stringify({\n    //               action: \"addOrEditConnections\",\n    //               user_id: sessionStorage.getItem(\"user\"),\n    //               session_token: sessionStorage.getItem(\"token\"),\n    //               userid: sessionStorage.getItem(\"user\"),\n    //               connectuserid: userID,\n    //             }),\n    //           }\n    //         )\n    //           .then((res) => res.json())\n    //           .then((result) => {\n    //             if (result.Status.includes(\"SUCCESS\")) {\n    //               if (userID === \"438\") {\n    //                 this.setState({\n    //                   u1Status: \"Unfollow\",\n    //                 });\n    //               } else if (userID === \"439\") {\n    //                 this.setState({\n    //                   u2Status: \"Unfollow\",\n    //                 });\n    //               } else if (userID === \"440\") {\n    //                 this.setState({\n    //                   u3Status: \"Unfollow\",\n    //                 });\n    //               }\n    //             }\n    //           });\n    //       }\n    //     });\n    // }\n  };\n\n  changeButton = (button, buttonState) => {\n    if (buttonState === \"Follow\") {\n      if (button === \"u1Status\") {\n        this.setState({\n          u1Status: \"Unfollow\",\n        });\n      } else if (button === \"u2Status\") {\n        this.setState({\n          u2Status: \"Unfollow\",\n        });\n      }\n      if (button === \"u3Status\") {\n        this.setState({\n          u3Status: \"Unfollow\",\n        });\n      }\n    } else if (buttonState === \"Unfollow\") {\n      if (button === \"u1Status\") {\n        this.setState({\n          u1Status: \"Follow\",\n        });\n      } else if (button === \"u2Status\") {\n        this.setState({\n          u2Status: \"Follow\",\n        });\n      }\n      if (button === \"u3Status\") {\n        this.setState({\n          u3Status: \"Follow\",\n        });\n      }\n    }\n  };\n\n  render() {\n    const { error, posts } = this.props;\n\n    if (error) {\n      return <div> Error: {error.message} </div>;\n    } else if (this.state.hasConnections === false) {\n      this.checkConnections();\n      return (\n        <div>\n          <h3>\n            You are currently not following anyone. <br /> Here are some\n            suggested users to follow:\n          </h3>\n          <div className=\"suggested-user-card\">\n            <div className=\"user\">\n              <div\n                className=\"profile-pic-container\"\n                style={{ margin: \"15px\", border: \"1px solid #dbdbdb\" }}\n              >\n                <img\n                  className=\"profile-pic\"\n                  src={\n                    \"https://image.shutterstock.com/image-photo/portrait-photo-person-project-concept-260nw-507830914.jpg\"\n                  }\n                  alt=\"post\"\n                />\n              </div>\n              <div className=\"sug-user-info\">\n                <h1>Jon Smith</h1>\n                <div className=\"sug-bio\">\n                  Hello! My name is Jon Smith. I am a programmer currently\n                  employed at Microsoft. I like to make websites, and have been\n                  working on web dev for 5 years now. I hope you guys enjoy some\n                  of my work here!\n                </div>\n              </div>\n              <div className=\"btn-container\">\n                <button\n                  className=\"follow-btn\"\n                  onClick={() =>\n                    this.changeButton(\"u1Status\", this.state.u1Status)\n                  }\n                >\n                  <span>{this.state.u1Status}</span>\n                </button>\n              </div>\n            </div>\n\n            <div className=\"user\">\n              <div\n                className=\"profile-pic-container\"\n                style={{ margin: \"15px\", border: \"1px solid #dbdbdb\" }}\n              >\n                <img\n                  className=\"profile-pic\"\n                  src={\n                    \"https://t4.ftcdn.net/jpg/02/89/99/33/240_F_289993382_QJID0KDhWhwp8JX3llcoD8V9jDKAZnpq.jpg\"\n                  }\n                  alt=\"post\"\n                />\n              </div>\n              <div className=\"sug-user-info\">\n                <h1>Tessa Samson</h1>\n                <div className=\"sug-bio\">\n                  Hello! My name is Tessa! I make music! I am a Music teacher at\n                  an Elementary School. I love to explore different genres of\n                  music and create unique sounding songs.\n                </div>\n              </div>\n\n              <div className=\"btn-container\">\n                <button\n                  className=\"follow-btn\"\n                  onClick={() =>\n                    this.changeButton(\"u2Status\", this.state.u2Status)\n                  }\n                >\n                  <span>{this.state.u2Status}</span>\n                </button>\n              </div>\n            </div>\n\n            <div className=\"user\">\n              <div\n                className=\"profile-pic-container\"\n                style={{ margin: \"15px\", border: \"1px solid #dbdbdb\" }}\n              >\n                <img\n                  className=\"profile-pic\"\n                  src={\n                    \"https://media.gettyimages.com/photos/portrait-of-japanese-man-picture-id650171629\"\n                  }\n                  alt=\"post\"\n                />\n              </div>\n              <div className=\"sug-user-info\">\n                <h1>Suki Ryo</h1>\n                <div className=\"sug-bio\">\n                  Hello! My name is Suki! I am a Japanese Film Maker. I like to\n                  explore stories of Horror and Thriller.\n                </div>\n              </div>\n              <div className=\"btn-container\">\n                <button\n                  className=\"follow-btn\"\n                  onClick={() =>\n                    this.changeButton(\"u3Status\", this.state.u3Status)\n                  }\n                >\n                  <span>{this.state.u3Status}</span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <button\n            className=\"confirm-btn\"\n            onClick={(e) => this.changeConnection(e)}\n          >\n            <span>Let's Start!</span>\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"posts\">\n          {posts.map((post) => (\n            <Post key={post.post_id} post={post} type={this.props.type} />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}