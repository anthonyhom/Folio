{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/CommentList.js\";\nimport React from \"react\";\nimport Comment from \"./Comment.js\";\nimport CommentForm from \"./CommentForm.js\";\nexport default class CommentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      commentPosts: []\n    }; // this.posts = React.createRef();\n  }\n\n  componentDidMount() {\n    // console.log(this.props.posts.user_id);\n    console.log(this.props.post);\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        parentid: this.props.post,\n        max_posts: 25\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.posts) {\n        this.setState({\n          commentPosts: result.posts\n        });\n        console.log(this.state.commentPosts);\n      }\n    } // (error) => {\n    //   alert(\"error!\");\n    // }\n    );\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      commentPosts\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, commentPosts.map(comment => React.createElement(Comment, {\n      key: comment.post_id,\n      post: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      className: \"text-above-commentBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Add your comment!\"), React.createElement(CommentForm, {\n      post: this.props.post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/CommentList.js"],"names":["React","Comment","CommentForm","CommentList","Component","constructor","props","state","error","commentPosts","componentDidMount","console","log","post","fetch","method","body","JSON","stringify","action","parentid","max_posts","then","res","json","result","posts","setState","render","isLoaded","map","comment","post_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,eAAe,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb,CAFiB,CAMjB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,IAAvB;AACAC,IAAAA,KAAK,CAAC,iEAAD,EAAoE;AACvEC,MAAAA,MAAM,EAAE,MAD+D;AAEvEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,UADW;AAEnBC,QAAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWO,IAFF;AAGnBQ,QAAAA,SAAS,EAAE;AAHQ,OAAf;AAFiE,KAApE,CAAL,CAQGC,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CAUKG,MAAD,IAAY;AACV,UAAIA,MAAM,CAACC,KAAX,EAAkB;AAChB,aAAKC,QAAL,CAAc;AACZlB,UAAAA,YAAY,EAAEgB,MAAM,CAACC;AADT,SAAd;AAGAf,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,YAAvB;AACD;AACF,KAjBL,CAkBI;AACA;AACA;AApBJ;AAsBD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,KAAF;AAASqB,MAAAA,QAAT;AAAmBpB,MAAAA;AAAnB,QAAoC,KAAKF,KAA/C;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,YAAY,CAACqB,GAAb,CAAkBC,OAAD,IAChB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,OAAtB;AAA+B,MAAA,IAAI,EAAED,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EAKE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,EAME,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWO,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAjDsD","sourcesContent":["import React from \"react\";\nimport Comment from \"./Comment.js\";\nimport CommentForm from \"./CommentForm.js\";\n\nexport default class CommentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      commentPosts: [],\n    };\n    // this.posts = React.createRef();\n  }\n  componentDidMount() {\n    // console.log(this.props.posts.user_id);\n    console.log(this.props.post);\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        parentid: this.props.post,\n        max_posts: 25,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.posts) {\n            this.setState({\n              commentPosts: result.posts,\n            });\n            console.log(this.state.commentPosts);\n          }\n        }\n        // (error) => {\n        //   alert(\"error!\");\n        // }\n      );\n  }\n\n  render() {\n    const { error, isLoaded, commentPosts } = this.state;\n\n    return (\n      <div className=\"comments\">\n        {commentPosts.map((comment) => (\n          <Comment key={comment.post_id} post={comment} />\n        ))}\n        {/* {console.log(this.state.commentPosts[0].post_id)} */}\n        <h1 className=\"text-above-commentBox\">Add your comment!</h1>\n        <CommentForm post={this.props.post} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}