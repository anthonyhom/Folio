{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/Post.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport \"../css/post.css\";\nimport CommentForm from \"./CommentForm.js\";\nimport Modal from \"./Modal\";\nimport EditPost from \"./EditPost\";\nimport CommentList from \"./CommentList.js\";\nimport ProfileModal from \"./ProfileModal.js\";\n\nclass MainContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.deletePost = event => {\n      //make the api call to the authentication page\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"deletePosts\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          postid: this.props.postId\n        })\n      }).then(res => res.json()).then(result => {\n        console.log(result);\n\n        if (result.Status === \"SUCCESS - Deleted 1 Rows\") {\n          window.location.reload(false);\n        } else {\n          console.log(result.Status);\n        }\n      }, error => {\n        alert(\"error!\");\n      }).catch(err => {\n        console.error(\"Request failed\");\n      });\n    };\n\n    this.state = {\n      section: this.props.modalPage,\n      comments: \"\"\n    };\n  }\n\n  handleDelete(e) {\n    this.setState({\n      section: \"delete\"\n    });\n  }\n\n  handleEdit(e) {\n    this.setState({\n      section: \"edit\"\n    });\n  }\n\n  render() {\n    if (this.state.section === \"options\") {\n      return React.createElement(\"div\", {\n        className: \"modal-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button1-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button1\",\n        onClick: e => this.handleEdit(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Edit\"))), React.createElement(\"div\", {\n        className: \"button2-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button2\",\n        onClick: e => this.handleDelete(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Delete\"))));\n    } else if (this.state.section === \"delete\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mod-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Are You Sure?\"), React.createElement(\"div\", {\n        className: \"modal-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button1-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button1\",\n        onClick: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"div\", {\n        className: \"button2-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button2\",\n        onClick: e => this.deletePost(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Yes\")))));\n    } else if (this.state.section === \"edit\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(EditPost, {\n        postId: this.props.postId,\n        time: this.props.time,\n        text: this.props.text,\n        title: this.props.title,\n        collab: this.props.collab,\n        pic: this.props.pic,\n        tag: this.props.tag,\n        onClose: this.props.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    } else if (this.state.section === \"comment\") {\n      return React.createElement(\"div\", {\n        className: \"comment-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(CommentList, {\n        post: this.props.postId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), console.log(this.props.post));\n    }\n  }\n\n}\n\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showDeleteModal = e => {\n      this.setState({\n        showModal: !this.state.showModal,\n        modalPage: \"delete\"\n      });\n    };\n\n    this.showCommentModal = e => {\n      this.setState({\n        showModal: !this.state.showModal,\n        modalPage: \"comment\",\n        commentPosts: this.props.post\n      }); // console.log(this.props.post.post_id);\n    };\n\n    this.showEditModal = e => {\n      this.setState({\n        showModal: !this.state.showModal,\n        modalPage: \"edit\"\n      });\n    };\n\n    this.showProfileModal = e => {\n      if (sessionStorage.getItem(\"user\") !== this.props.post.user_id) {\n        this.setState({\n          showProfile: !this.state.showProfile\n        });\n      }\n    };\n\n    this.showModal = e => {\n      this.setState({\n        showModal: !this.state.showModal,\n        modalPage: \"options\"\n      });\n    };\n\n    this.setCommentCount = newcount => {\n      this.setState({\n        comments: newcount\n      });\n    };\n\n    this.getTitle = () => {\n      var separator = this.props.post.post_text.indexOf(\"~@~\");\n      this.state.title = this.props.post.post_text.substring(0, separator);\n      return this.state.title;\n    };\n\n    this.getCaption = () => {\n      var titleSep = this.props.post.post_text.indexOf(\"~@~\");\n      var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n\n      if (collabSep !== -1) {\n        //Some Collabs\n        this.state.caption = this.props.post.post_text.substring(titleSep + 3, collabSep);\n        return this.state.caption;\n      } else {\n        //No collabs\n        this.state.caption = this.props.post.post_text.substring(titleSep + 3, this.props.post.post_text.length);\n        return this.state.caption;\n      }\n    };\n\n    this.getCollab = () => {\n      var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n\n      if (collabSep !== -1) {\n        //Some Collabs\n        this.state.collab = this.props.post.post_text.substring(collabSep + 3, this.props.post.post_text.length);\n        return this.state.collab;\n      } else {\n        //No collabs\n        return \"\";\n      }\n    };\n\n    this.state = {\n      showModal: false,\n      showProfile: false,\n      comments: this.props.post.comment_flag,\n      title: \"\",\n      caption: \"\",\n      collab: \"\",\n      modalPage: \"\",\n      commentPosts: \"\",\n      liked: false,\n      artifactID: \"\"\n    };\n    this.post = React.createRef();\n  }\n\n  componentDidMount() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\"\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.user_artifacts != null) {\n        this.setState({\n          liked: true,\n          artifactID: result.user_artifacts[0].artifact_id\n        });\n      } else {\n        this.setState({\n          liked: false\n        });\n      }\n    } // (error) => {\n    //   alert(\"error!\");\n    // }\n    );\n    console.log(this.state.artifactID);\n  }\n\n  addLike(e) {\n    // var likedUser = this.props.post.user_id;\n    //Adds the notification for the other user\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: this.props.post.user_id,\n        artifacturl: sessionStorage.getItem(\"user\") + \"~@~\" + sessionStorage.getItem(\"dname\") + \" has liked your post\",\n        artifacttype: \"like\",\n        artifactcategory: \"NotificationNew\"\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n    });\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        artifactcategory: \"Notificationcount\",\n        artifacturl: parseInt(this.props.notifcount) + 1,\n        // the count is supposed to go here.\n        artifactid: this.props.notificationid\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.user_artifacts) {\n        this.setState({\n          notifications: result.user_artifacts\n        });\n      }\n    }); //Add the crumb to the user who liked the post\n\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\",\n        artifactcategory: \"Like-Check\"\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        liked: true,\n        artifactID: result[\"Record Id\"]\n      });\n      console.log(this.state.artifactID);\n    }); // console.log(this.props.post.user_id);\n  }\n\n  deleteLike(e) {\n    // console.log(this.state.artifactID);\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"deleteUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        artifactid: this.state.artifactID\n      })\n    }).then(res => res.json()).then(result => {});\n    this.setState({\n      liked: false,\n      artifactID: \"\"\n    });\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n\n    return \"comments hide\";\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n\n    return \"comments hide\";\n  } // conditionalDisplay() {\n  //   console.log(\"Parent is \" + this.props.post.parent_id);\n  //   // if (this.props.post.parent_id) {\n  //   //   return \"\";\n  //   // } else {\n  //   return (\n  //     <div className=\"comment-block\">\n  //       <div className=\"comment-indicator\">\n  //         <div className=\"comment-indicator-text\">\n  //           {this.getCommentCount()} Comments\n  //         </div>\n  //         <img\n  //           src={require(\"../Images/comment.svg\")}\n  //           className=\"comment-icon\"\n  //           onClick={(e) => this.showModal()}\n  //           alt=\"View Comments\"\n  //         />\n  //       </div>\n  //       <div className={this.showHideComments()}>\n  //         <CommentForm\n  //           onAddComment={this.setCommentCount}\n  //           parent={this.props.post.post_id}\n  //           commentCount={this.getCommentCount()}\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  //   // }\n  // }\n  // render() {\n  //   // console.log(this.props);\n  //   var separator = this.props.post.post_text.indexOf(\"~@~\");\n  //   this.state.title = this.props.post.post_text.substring(0, separator);\n  //   this.state.caption = this.props.post.post_text.substring(\n  //     separator + 3,\n  //     this.props.post.post_text.length\n  //   );\n  //   // console.log(\"THIS IS TITLE: \", this.state.title);\n  //   // console.log(\"THIS IS BODY: \", this.state.caption);\n  //   // this.getTags();\n\n\n  render() {\n    // console.log(this.props.post);\n    // console.log(\"THIS IS SESSION ID \", sessionStorage.getItem(\"user\"));\n    let mainContent = React.createRef();\n    let title = this.getTitle();\n    let caption = this.getCaption();\n    let collab = this.getCollab();\n    let like;\n\n    if (this.state.liked == false) {\n      like = React.createElement(\"button\", {\n        className: \"interact-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Like Button-empty\",\n        src: require(\"../Images/star.svg\"),\n        className: \"button-icon\",\n        onClick: e => this.addLike(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }));\n    } else {\n      like = React.createElement(\"button\", {\n        className: \"interact-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Like Button-liked\",\n        src: require(\"../Images/star-liked.svg\"),\n        className: \"button-icon\",\n        onClick: e => this.deleteLike(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" row card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.post.user_id === sessionStorage.getItem(\"user\") ? \"my-username\" : \"username\",\n      onClick: e => this.showProfileModal(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, this.props.post.name)), React.createElement(\"div\", {\n      className: \"row card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"post-img\",\n      src: !this.props.post.post_pic_url ? require(\"../Images/defaultPic.jpg\") : this.props.post.post_pic_url,\n      alt: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \" row title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, this.getTitle())), React.createElement(\"div\", {\n      className: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, this.getCaption())), React.createElement(\"div\", {\n      className: this.state.collab !== \"\" ? \"collab\" : \"no-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \"Collaborators:\"), \" \", collab))), React.createElement(\"div\", {\n      className: \"row card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, \"# \"), this.props.post.post_type)), React.createElement(\"div\", {\n      className: \"interact-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, like, React.createElement(\"button\", {\n      className: \"interact-button\",\n      onClick: e => {\n        this.showCommentModal(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Comment Button\",\n      src: require(\"../Images/comment.svg\"),\n      className: \"button-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }), this.props.post.comment_flag), React.createElement(\"div\", {\n      className: this.props.post.user_id === sessionStorage.getItem(\"user\") ? \"interact-button-edit-del\" : \"no-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.showDeleteModal(e),\n      className: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Delete Button\",\n      src: require(\"../Images/trash.svg\"),\n      className: \"button-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: e => this.showEditModal(e),\n      className: \"pencil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Edit Button\",\n      src: require(\"../Images/pencil.svg\"),\n      className: \"button-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: e => this.showModal(e),\n      className: \"kabab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Post menu\",\n      src: require(\"../Images/menu.svg\"),\n      className: \"button-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    })))), React.createElement(Modal, {\n      show: this.state.showModal,\n      onClose: e => this.showModal(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(MainContent, {\n      ref: mainContent,\n      modalPage: this.state.modalPage,\n      postId: this.props.post.post_id,\n      time: this.props.post.timestamp,\n      text: caption,\n      title: title,\n      collab: collab,\n      pic: this.props.post.post_pic_url,\n      tag: this.props.post.post_type,\n      onClose: e => this.showModal(e),\n      post: this.props.commentPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    })), React.createElement(ProfileModal, {\n      show: this.state.showProfile,\n      onClose: e => this.showProfileModal(e),\n      userid: this.props.post.user_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/Post.js"],"names":["React","CommentForm","Modal","EditPost","CommentList","ProfileModal","MainContent","Component","constructor","props","_isMounted","onClose","e","deletePost","event","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","session_token","postid","postId","then","res","json","result","console","log","Status","window","location","reload","error","alert","catch","err","state","section","modalPage","comments","handleDelete","setState","handleEdit","render","time","text","title","collab","pic","tag","post","Post","showDeleteModal","showModal","showCommentModal","commentPosts","showEditModal","showProfileModal","showProfile","setCommentCount","newcount","getTitle","separator","post_text","indexOf","substring","getCaption","titleSep","collabSep","caption","length","getCollab","comment_flag","liked","artifactID","createRef","componentDidMount","userid","artifacturl","post_id","artifacttype","user_artifacts","artifact_id","addLike","artifactcategory","parseInt","notifcount","artifactid","notificationid","notifications","deleteLike","showHideComments","mainContent","like","require","name","post_pic_url","post_type","timestamp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,UACmB,GADN,KACM;;AAAA,SAQnBC,OARmB,GAQRC,CAAD,IAAO;AACf,WAAKH,KAAL,CAAWE,OAAX,IAAsB,KAAKF,KAAL,CAAWE,OAAX,CAAmBC,CAAnB,CAAtB;AACD,KAVkB;;AAAA,SAYnBC,UAZmB,GAYLC,KAAD,IAAW;AACtB;AACAC,MAAAA,KAAK,CAAC,iEAAD,EAAoE;AACvEC,QAAAA,MAAM,EAAE,MAD+D;AAEvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,aADW;AAEnBC,UAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBC,UAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInBE,UAAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWiB;AAJA,SAAf;AAFiE,OAApE,CAAL,CASGC,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAWKG,MAAD,IAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,YAAIA,MAAM,CAACG,MAAP,KAAkB,0BAAtB,EAAkD;AAChDC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,SAFD,MAEO;AACLL,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,MAAnB;AACD;AACF,OAlBL,EAmBKI,KAAD,IAAW;AACTC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD,OArBL,EAuBGC,KAvBH,CAuBUC,GAAD,IAAS;AACdT,QAAAA,OAAO,CAACM,KAAR,CAAc,gBAAd;AACD,OAzBH;AA0BD,KAxCkB;;AAEjB,SAAKI,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWkC,SADT;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAoCDC,EAAAA,YAAY,CAACjC,CAAD,EAAI;AACd,SAAKkC,QAAL,CAAc;AACZJ,MAAAA,OAAO,EAAE;AADG,KAAd;AAGD;;AAEDK,EAAAA,UAAU,CAACnC,CAAD,EAAI;AACZ,SAAKkC,QAAL,CAAc;AACZJ,MAAAA,OAAO,EAAE;AADG,KAAd;AAGD;;AAEDM,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKP,KAAL,CAAWC,OAAX,KAAuB,SAA3B,EAAsC;AACpC,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAG9B,CAAD,IAAO,KAAKmC,UAAL,CAAgBnC,CAAhB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAGA,CAAD,IAAO,KAAKiC,YAAL,CAAkBjC,CAAlB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CANF,CADF;AAcD,KAfD,MAeO,IAAI,KAAK6B,KAAL,CAAWC,OAAX,KAAuB,QAA3B,EAAqC;AAC1C,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,KAAK/B,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAGC,CAAD,IAAO,KAAKC,UAAL,CAAgBD,CAAhB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,CANF,CAFF,CADF;AAiBD,KAlBM,MAkBA,IAAI,KAAK6B,KAAL,CAAWC,OAAX,KAAuB,MAA3B,EAAmC;AACxC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKjC,KAAL,CAAWiB,MADrB;AAEE,QAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWwC,IAFnB;AAGE,QAAA,IAAI,EAAE,KAAKxC,KAAL,CAAWyC,IAHnB;AAIE,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAW0C,KAJpB;AAKE,QAAA,MAAM,EAAE,KAAK1C,KAAL,CAAW2C,MALrB;AAME,QAAA,GAAG,EAAE,KAAK3C,KAAL,CAAW4C,GANlB;AAOE,QAAA,GAAG,EAAE,KAAK5C,KAAL,CAAW6C,GAPlB;AAQE,QAAA,OAAO,EAAE,KAAK7C,KAAL,CAAWE,OARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAcD,KAfM,MAeA,IAAI,KAAK8B,KAAL,CAAWC,OAAX,KAAuB,SAA3B,EAAsC;AAC3C,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWiB,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGK,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAW8C,IAAvB,CAFH,CADF;AAMD;AACF;;AAjHuC;;AAoH1C,eAAe,MAAMC,IAAN,SAAmBxD,KAAK,CAACO,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0InBgD,eA1ImB,GA0IA7C,CAAD,IAAO;AACvB,WAAKkC,QAAL,CAAc;AACZY,QAAAA,SAAS,EAAE,CAAC,KAAKjB,KAAL,CAAWiB,SADX;AAEZf,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KA/IkB;;AAAA,SAgJnBgB,gBAhJmB,GAgJC/C,CAAD,IAAO;AACxB,WAAKkC,QAAL,CAAc;AACZY,QAAAA,SAAS,EAAE,CAAC,KAAKjB,KAAL,CAAWiB,SADX;AAEZf,QAAAA,SAAS,EAAE,SAFC;AAGZiB,QAAAA,YAAY,EAAE,KAAKnD,KAAL,CAAW8C;AAHb,OAAd,EADwB,CAMxB;AACD,KAvJkB;;AAAA,SAwJnBM,aAxJmB,GAwJFjD,CAAD,IAAO;AACrB,WAAKkC,QAAL,CAAc;AACZY,QAAAA,SAAS,EAAE,CAAC,KAAKjB,KAAL,CAAWiB,SADX;AAEZf,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KA7JkB;;AAAA,SA8JnBmB,gBA9JmB,GA8JClD,CAAD,IAAO;AACxB,UAAIU,cAAc,CAACC,OAAf,CAAuB,MAAvB,MAAmC,KAAKd,KAAL,CAAW8C,IAAX,CAAgBlC,OAAvD,EAAgE;AAC9D,aAAKyB,QAAL,CAAc;AACZiB,UAAAA,WAAW,EAAE,CAAC,KAAKtB,KAAL,CAAWsB;AADb,SAAd;AAGD;AACF,KApKkB;;AAAA,SAsKnBL,SAtKmB,GAsKN9C,CAAD,IAAO;AACjB,WAAKkC,QAAL,CAAc;AACZY,QAAAA,SAAS,EAAE,CAAC,KAAKjB,KAAL,CAAWiB,SADX;AAEZf,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KA3KkB;;AAAA,SA6KnBqB,eA7KmB,GA6KAC,QAAD,IAAc;AAC9B,WAAKnB,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAEqB;AADE,OAAd;AAGD,KAjLkB;;AAAA,SAoOnBC,QApOmB,GAoOR,MAAM;AACf,UAAIC,SAAS,GAAG,KAAK1D,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BC,OAA1B,CAAkC,KAAlC,CAAhB;AACA,WAAK5B,KAAL,CAAWU,KAAX,GAAmB,KAAK1C,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BE,SAA1B,CAAoC,CAApC,EAAuCH,SAAvC,CAAnB;AACA,aAAO,KAAK1B,KAAL,CAAWU,KAAlB;AACD,KAxOkB;;AAAA,SA0OnBoB,UA1OmB,GA0ON,MAAM;AACjB,UAAIC,QAAQ,GAAG,KAAK/D,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BC,OAA1B,CAAkC,KAAlC,CAAf;AACA,UAAII,SAAS,GAAG,KAAKhE,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BC,OAA1B,CAAkC,KAAlC,CAAhB;;AACA,UAAII,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpB;AACA,aAAKhC,KAAL,CAAWiC,OAAX,GAAqB,KAAKjE,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BE,SAA1B,CACnBE,QAAQ,GAAG,CADQ,EAEnBC,SAFmB,CAArB;AAIA,eAAO,KAAKhC,KAAL,CAAWiC,OAAlB;AACD,OAPD,MAOO;AACL;AACA,aAAKjC,KAAL,CAAWiC,OAAX,GAAqB,KAAKjE,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BE,SAA1B,CACnBE,QAAQ,GAAG,CADQ,EAEnB,KAAK/D,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BO,MAFP,CAArB;AAIA,eAAO,KAAKlC,KAAL,CAAWiC,OAAlB;AACD;AACF,KA5PkB;;AAAA,SA6PnBE,SA7PmB,GA6PP,MAAM;AAChB,UAAIH,SAAS,GAAG,KAAKhE,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BC,OAA1B,CAAkC,KAAlC,CAAhB;;AACA,UAAII,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpB;AACA,aAAKhC,KAAL,CAAWW,MAAX,GAAoB,KAAK3C,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BE,SAA1B,CAClBG,SAAS,GAAG,CADM,EAElB,KAAKhE,KAAL,CAAW8C,IAAX,CAAgBa,SAAhB,CAA0BO,MAFR,CAApB;AAIA,eAAO,KAAKlC,KAAL,CAAWW,MAAlB;AACD,OAPD,MAOO;AACL;AACA,eAAO,EAAP;AACD;AACF,KA1QkB;;AAEjB,SAAKX,KAAL,GAAa;AACXiB,MAAAA,SAAS,EAAE,KADA;AAEXK,MAAAA,WAAW,EAAE,KAFF;AAGXnB,MAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAW8C,IAAX,CAAgBsB,YAHf;AAIX1B,MAAAA,KAAK,EAAE,EAJI;AAKXuB,MAAAA,OAAO,EAAE,EALE;AAMXtB,MAAAA,MAAM,EAAE,EANG;AAOXT,MAAAA,SAAS,EAAE,EAPA;AAQXiB,MAAAA,YAAY,EAAE,EARH;AASXkB,MAAAA,KAAK,EAAE,KATI;AAUXC,MAAAA,UAAU,EAAE;AAVD,KAAb;AAYA,SAAKxB,IAAL,GAAYvD,KAAK,CAACgF,SAAN,EAAZ;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBlE,IAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,kBADW;AAEnB8D,QAAAA,MAAM,EAAE5D,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFW;AAGnB4D,QAAAA,WAAW,EAAE,KAAK1E,KAAL,CAAW8C,IAAX,CAAgB6B,OAHV;AAInBC,QAAAA,YAAY,EAAE;AAJK,OAAf;AAF+D,KAAlE,CAAL,CASG1D,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAWKG,MAAD,IAAY;AACV,UAAIA,MAAM,CAACwD,cAAP,IAAyB,IAA7B,EAAmC;AACjC,aAAKxC,QAAL,CAAc;AACZgC,UAAAA,KAAK,EAAE,IADK;AAEZC,UAAAA,UAAU,EAAEjD,MAAM,CAACwD,cAAP,CAAsB,CAAtB,EAAyBC;AAFzB,SAAd;AAID,OALD,MAKO;AACL,aAAKzC,QAAL,CAAc;AACZgC,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;AACF,KAtBL,CAuBI;AACA;AACA;AAzBJ;AA2BA/C,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAL,CAAWsC,UAAvB;AACD;;AACDS,EAAAA,OAAO,CAAC5E,CAAD,EAAI;AACT;AACA;AACAG,IAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,wBADW;AAEnBC,QAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBC,QAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInB2D,QAAAA,MAAM,EAAE,KAAKzE,KAAL,CAAW8C,IAAX,CAAgBlC,OAJL;AAKnB8D,QAAAA,WAAW,EACT7D,cAAc,CAACC,OAAf,CAAuB,MAAvB,IACA,KADA,GAEAD,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAFA,GAGA,sBATiB;AAUnB8D,QAAAA,YAAY,EAAE,MAVK;AAWnBI,QAAAA,gBAAgB,EAAE;AAXC,OAAf;AAF+D,KAAlE,CAAL,CAgBG9D,IAhBH,CAgBSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAhBjB,EAiBGF,IAjBH,CAiBSG,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAnBH;AAoBAf,IAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,wBADW;AAEnBC,QAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBC,QAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInB2D,QAAAA,MAAM,EAAE5D,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAJW;AAMnBkE,QAAAA,gBAAgB,EAAE,mBANC;AAOnBN,QAAAA,WAAW,EAAEO,QAAQ,CAAC,KAAKjF,KAAL,CAAWkF,UAAZ,CAAR,GAAkC,CAP5B;AAO+B;AAClDC,QAAAA,UAAU,EAAE,KAAKnF,KAAL,CAAWoF;AARJ,OAAf;AAF+D,KAAlE,CAAL,CAaGlE,IAbH,CAaSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAbjB,EAcGF,IAdH,CAcSG,MAAD,IAAY;AAChB,UAAIA,MAAM,CAACwD,cAAX,EAA2B;AACzB,aAAKxC,QAAL,CAAc;AACZgD,UAAAA,aAAa,EAAEhE,MAAM,CAACwD;AADV,SAAd;AAGD;AACF,KApBH,EAvBS,CA4CT;;AACAvE,IAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,wBADW;AAEnBC,QAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBC,QAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInB2D,QAAAA,MAAM,EAAE5D,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAJW;AAKnB4D,QAAAA,WAAW,EAAE,KAAK1E,KAAL,CAAW8C,IAAX,CAAgB6B,OALV;AAMnBC,QAAAA,YAAY,EAAE,aANK;AAOnBI,QAAAA,gBAAgB,EAAE;AAPC,OAAf;AAF+D,KAAlE,CAAL,CAYG9D,IAZH,CAYSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZjB,EAaGF,IAbH,CAaSG,MAAD,IAAY;AAChB,WAAKgB,QAAL,CAAc;AACZgC,QAAAA,KAAK,EAAE,IADK;AAEZC,QAAAA,UAAU,EAAEjD,MAAM,CAAC,WAAD;AAFN,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAL,CAAWsC,UAAvB;AACD,KAnBH,EA7CS,CAkET;AACD;;AACDgB,EAAAA,UAAU,CAACnF,CAAD,EAAI;AACZ;AACAG,IAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,qBADW;AAEnBC,QAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBC,QAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInBqE,QAAAA,UAAU,EAAE,KAAKnD,KAAL,CAAWsC;AAJJ,OAAf;AAF+D,KAAlE,CAAL,CASGpD,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSG,MAAD,IAAY,CAAE,CAVtB;AAWA,SAAKgB,QAAL,CAAc;AACZgC,MAAAA,KAAK,EAAE,KADK;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAAd;AAID;;AACDiB,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKvD,KAAL,CAAWiB,SAAf,EAA0B;AACxB,aAAO,eAAP;AACD;;AACD,WAAO,eAAP;AACD;;AA0CDsC,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKvD,KAAL,CAAWiB,SAAf,EAA0B;AACxB,aAAO,eAAP;AACD;;AACD,WAAO,eAAP;AACD,GAzL+C,CA2LhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAyCAV,EAAAA,MAAM,GAAG;AACP;AACA;AACA,QAAIiD,WAAW,GAAGjG,KAAK,CAACgF,SAAN,EAAlB;AACA,QAAI7B,KAAK,GAAG,KAAKe,QAAL,EAAZ;AACA,QAAIQ,OAAO,GAAG,KAAKH,UAAL,EAAd;AACA,QAAInB,MAAM,GAAG,KAAKwB,SAAL,EAAb;AAEA,QAAIsB,IAAJ;;AACA,QAAI,KAAKzD,KAAL,CAAWqC,KAAX,IAAoB,KAAxB,EAA+B;AAC7BoB,MAAAA,IAAI,GACF;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAC,mBADN;AAEE,QAAA,GAAG,EAAEC,OAAO,CAAC,oBAAD,CAFd;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,OAAO,EAAGvF,CAAD,IAAO,KAAK4E,OAAL,EAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD,KAXD,MAWO;AACLU,MAAAA,IAAI,GACF;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAC,mBADN;AAEE,QAAA,GAAG,EAAEC,OAAO,CAAC,0BAAD,CAFd;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,OAAO,EAAGvF,CAAD,IAAO,KAAKmF,UAAL,EAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EACP,KAAKtF,KAAL,CAAW8C,IAAX,CAAgBlC,OAAhB,KAA4BC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAA5B,GACI,aADJ,GAEI,UAJR;AAME,MAAA,OAAO,EAAGX,CAAD,IAAO,KAAKkD,gBAAL,CAAsBlD,CAAtB,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAKH,KAAL,CAAW8C,IAAX,CAAgB6C,IARnB,CADF,CADF,EAaE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,GAAG,EACD,CAAC,KAAK3F,KAAL,CAAW8C,IAAX,CAAgB8C,YAAjB,GACIF,OAAO,CAAC,0BAAD,CADX,GAEI,KAAK1F,KAAL,CAAW8C,IAAX,CAAgB8C,YALxB;AAOE,MAAA,GAAG,EAAC,MAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKnC,QAAL,EAAL,CADF,CAVF,EAaE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKK,UAAL,EAAJ,CADF,CAbF,EAgBE;AAAK,MAAA,SAAS,EAAE,KAAK9B,KAAL,CAAWW,MAAX,KAAsB,EAAtB,GAA2B,QAA3B,GAAsC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OACyBA,MADzB,CADF,CAhBF,CAbF,EAmCE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,KAAK3C,KAAL,CAAW8C,IAAX,CAAgB+C,SAFnB,CADF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGJ,IAFH,EAIE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAGtF,CAAD,IAAO;AACd,aAAK+C,gBAAL,CAAsB/C,CAAtB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AACE,MAAA,GAAG,EAAC,gBADN;AAEE,MAAA,GAAG,EAAEuF,OAAO,CAAC,uBAAD,CAFd;AAGE,MAAA,SAAS,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAWG,KAAK1F,KAAL,CAAW8C,IAAX,CAAgBsB,YAXnB,CAJF,EAiBE;AACE,MAAA,SAAS,EACP,KAAKpE,KAAL,CAAW8C,IAAX,CAAgBlC,OAAhB,KAA4BC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAA5B,GACI,0BADJ,GAEI,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AACE,MAAA,OAAO,EAAGX,CAAD,IAAO,KAAK6C,eAAL,CAAqB7C,CAArB,CADlB;AAEE,MAAA,SAAS,EAAC,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE,MAAA,GAAG,EAAC,eADN;AAEE,MAAA,GAAG,EAAEuF,OAAO,CAAC,qBAAD,CAFd;AAGE,MAAA,SAAS,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAPF,EAiBE;AAAQ,MAAA,OAAO,EAAGvF,CAAD,IAAO,KAAKiD,aAAL,CAAmBjD,CAAnB,CAAxB;AAA+C,MAAA,SAAS,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,aADN;AAEE,MAAA,GAAG,EAAEuF,OAAO,CAAC,sBAAD,CAFd;AAGE,MAAA,SAAS,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjBF,EAwBE;AAAQ,MAAA,OAAO,EAAGvF,CAAD,IAAO,KAAK8C,SAAL,CAAe9C,CAAf,CAAxB;AAA2C,MAAA,SAAS,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,WADN;AAEE,MAAA,GAAG,EAAEuF,OAAO,CAAC,oBAAD,CAFd;AAGE,MAAA,SAAS,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxBF,CAjBF,CAPF,EAyDE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAK1D,KAAL,CAAWiB,SAAxB;AAAmC,MAAA,OAAO,EAAG9C,CAAD,IAAO,KAAK8C,SAAL,CAAe9C,CAAf,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEqF,WADP;AAEE,MAAA,SAAS,EAAE,KAAKxD,KAAL,CAAWE,SAFxB;AAGE,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAW8C,IAAX,CAAgB6B,OAH1B;AAIE,MAAA,IAAI,EAAE,KAAK3E,KAAL,CAAW8C,IAAX,CAAgBgD,SAJxB;AAKE,MAAA,IAAI,EAAE7B,OALR;AAME,MAAA,KAAK,EAAEvB,KANT;AAOE,MAAA,MAAM,EAAEC,MAPV;AAQE,MAAA,GAAG,EAAE,KAAK3C,KAAL,CAAW8C,IAAX,CAAgB8C,YARvB;AASE,MAAA,GAAG,EAAE,KAAK5F,KAAL,CAAW8C,IAAX,CAAgB+C,SATvB;AAUE,MAAA,OAAO,EAAG1F,CAAD,IAAO,KAAK8C,SAAL,CAAe9C,CAAf,CAVlB;AAWE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWmD,YAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzDF,EAwEE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWsB,WADnB;AAEE,MAAA,OAAO,EAAGnD,CAAD,IAAO,KAAKkD,gBAAL,CAAsBlD,CAAtB,CAFlB;AAGE,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAW8C,IAAX,CAAgBlC,OAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxEF,CAnCF,CADF;AAoHD;;AAla+C","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport \"../css/post.css\";\nimport CommentForm from \"./CommentForm.js\";\nimport Modal from \"./Modal\";\nimport EditPost from \"./EditPost\";\nimport CommentList from \"./CommentList.js\";\nimport ProfileModal from \"./ProfileModal.js\";\n\nclass MainContent extends React.Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      section: this.props.modalPage,\n      comments: \"\",\n    };\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  deletePost = (event) => {\n    //make the api call to the authentication page\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"deletePosts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        postid: this.props.postId,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          if (result.Status === \"SUCCESS - Deleted 1 Rows\") {\n            window.location.reload(false);\n          } else {\n            console.log(result.Status);\n          }\n        },\n        (error) => {\n          alert(\"error!\");\n        }\n      )\n      .catch((err) => {\n        console.error(\"Request failed\");\n      });\n  };\n\n  handleDelete(e) {\n    this.setState({\n      section: \"delete\",\n    });\n  }\n\n  handleEdit(e) {\n    this.setState({\n      section: \"edit\",\n    });\n  }\n\n  render() {\n    if (this.state.section === \"options\") {\n      return (\n        <div className=\"modal-buttons\">\n          <div className=\"button1-container\">\n            <button className=\"button1\" onClick={(e) => this.handleEdit(e)}>\n              <span>Edit</span>\n            </button>\n          </div>\n          <div className=\"button2-container\">\n            <button className=\"button2\" onClick={(e) => this.handleDelete(e)}>\n              <span>Delete</span>\n            </button>\n          </div>\n        </div>\n      );\n    } else if (this.state.section === \"delete\") {\n      return (\n        <div>\n          <div className=\"mod-title\">Are You Sure?</div>\n          <div className=\"modal-buttons\">\n            <div className=\"button1-container\">\n              <button className=\"button1\" onClick={this.onClose}>\n                <span>No</span>\n              </button>\n            </div>\n            <div className=\"button2-container\">\n              <button className=\"button2\" onClick={(e) => this.deletePost(e)}>\n                <span>Yes</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.state.section === \"edit\") {\n      return (\n        <div>\n          <EditPost\n            postId={this.props.postId}\n            time={this.props.time}\n            text={this.props.text}\n            title={this.props.title}\n            collab={this.props.collab}\n            pic={this.props.pic}\n            tag={this.props.tag}\n            onClose={this.props.onClose}\n          />\n        </div>\n      );\n    } else if (this.state.section === \"comment\") {\n      return (\n        <div className=\"comment-modal\">\n          <CommentList post={this.props.postId} />\n          {console.log(this.props.post)}\n        </div>\n      );\n    }\n  }\n}\n\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      showProfile: false,\n      comments: this.props.post.comment_flag,\n      title: \"\",\n      caption: \"\",\n      collab: \"\",\n      modalPage: \"\",\n      commentPosts: \"\",\n      liked: false,\n      artifactID: \"\",\n    };\n    this.post = React.createRef();\n  }\n  componentDidMount() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\",\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.user_artifacts != null) {\n            this.setState({\n              liked: true,\n              artifactID: result.user_artifacts[0].artifact_id,\n            });\n          } else {\n            this.setState({\n              liked: false,\n            });\n          }\n        }\n        // (error) => {\n        //   alert(\"error!\");\n        // }\n      );\n    console.log(this.state.artifactID);\n  }\n  addLike(e) {\n    // var likedUser = this.props.post.user_id;\n    //Adds the notification for the other user\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: this.props.post.user_id,\n        artifacturl:\n          sessionStorage.getItem(\"user\") +\n          \"~@~\" +\n          sessionStorage.getItem(\"dname\") +\n          \" has liked your post\",\n        artifacttype: \"like\",\n        artifactcategory: \"NotificationNew\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n      });\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n\n        artifactcategory: \"Notificationcount\",\n        artifacturl: parseInt(this.props.notifcount) + 1, // the count is supposed to go here.\n        artifactid: this.props.notificationid,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.user_artifacts) {\n          this.setState({\n            notifications: result.user_artifacts,\n          });\n        }\n      });\n    //Add the crumb to the user who liked the post\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.post.post_id,\n        artifacttype: \"liked-list2\",\n        artifactcategory: \"Like-Check\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          liked: true,\n          artifactID: result[\"Record Id\"],\n        });\n        console.log(this.state.artifactID);\n      });\n\n    // console.log(this.props.post.user_id);\n  }\n  deleteLike(e) {\n    // console.log(this.state.artifactID);\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"deleteUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        artifactid: this.state.artifactID,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {});\n    this.setState({\n      liked: false,\n      artifactID: \"\",\n    });\n  }\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n    return \"comments hide\";\n  }\n  showDeleteModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalPage: \"delete\",\n    });\n  };\n  showCommentModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalPage: \"comment\",\n      commentPosts: this.props.post,\n    });\n    // console.log(this.props.post.post_id);\n  };\n  showEditModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalPage: \"edit\",\n    });\n  };\n  showProfileModal = (e) => {\n    if (sessionStorage.getItem(\"user\") !== this.props.post.user_id) {\n      this.setState({\n        showProfile: !this.state.showProfile,\n      });\n    }\n  };\n\n  showModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalPage: \"options\",\n    });\n  };\n\n  setCommentCount = (newcount) => {\n    this.setState({\n      comments: newcount,\n    });\n  };\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n    return \"comments hide\";\n  }\n\n  // conditionalDisplay() {\n  //   console.log(\"Parent is \" + this.props.post.parent_id);\n  //   // if (this.props.post.parent_id) {\n  //   //   return \"\";\n  //   // } else {\n  //   return (\n  //     <div className=\"comment-block\">\n  //       <div className=\"comment-indicator\">\n  //         <div className=\"comment-indicator-text\">\n  //           {this.getCommentCount()} Comments\n  //         </div>\n  //         <img\n  //           src={require(\"../Images/comment.svg\")}\n  //           className=\"comment-icon\"\n  //           onClick={(e) => this.showModal()}\n  //           alt=\"View Comments\"\n  //         />\n  //       </div>\n  //       <div className={this.showHideComments()}>\n  //         <CommentForm\n  //           onAddComment={this.setCommentCount}\n  //           parent={this.props.post.post_id}\n  //           commentCount={this.getCommentCount()}\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  //   // }\n  // }\n  // render() {\n  //   // console.log(this.props);\n\n  //   var separator = this.props.post.post_text.indexOf(\"~@~\");\n  //   this.state.title = this.props.post.post_text.substring(0, separator);\n  //   this.state.caption = this.props.post.post_text.substring(\n  //     separator + 3,\n  //     this.props.post.post_text.length\n  //   );\n\n  //   // console.log(\"THIS IS TITLE: \", this.state.title);\n  //   // console.log(\"THIS IS BODY: \", this.state.caption);\n  //   // this.getTags();\n  getTitle = () => {\n    var separator = this.props.post.post_text.indexOf(\"~@~\");\n    this.state.title = this.props.post.post_text.substring(0, separator);\n    return this.state.title;\n  };\n\n  getCaption = () => {\n    var titleSep = this.props.post.post_text.indexOf(\"~@~\");\n    var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n    if (collabSep !== -1) {\n      //Some Collabs\n      this.state.caption = this.props.post.post_text.substring(\n        titleSep + 3,\n        collabSep\n      );\n      return this.state.caption;\n    } else {\n      //No collabs\n      this.state.caption = this.props.post.post_text.substring(\n        titleSep + 3,\n        this.props.post.post_text.length\n      );\n      return this.state.caption;\n    }\n  };\n  getCollab = () => {\n    var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n    if (collabSep !== -1) {\n      //Some Collabs\n      this.state.collab = this.props.post.post_text.substring(\n        collabSep + 3,\n        this.props.post.post_text.length\n      );\n      return this.state.collab;\n    } else {\n      //No collabs\n      return \"\";\n    }\n  };\n\n  render() {\n    // console.log(this.props.post);\n    // console.log(\"THIS IS SESSION ID \", sessionStorage.getItem(\"user\"));\n    let mainContent = React.createRef();\n    let title = this.getTitle();\n    let caption = this.getCaption();\n    let collab = this.getCollab();\n\n    let like;\n    if (this.state.liked == false) {\n      like = (\n        <button className=\"interact-button\">\n          <img\n            alt=\"Like Button-empty\"\n            src={require(\"../Images/star.svg\")}\n            className=\"button-icon\"\n            onClick={(e) => this.addLike()}\n          />\n        </button>\n      );\n    } else {\n      like = (\n        <button className=\"interact-button\">\n          <img\n            alt=\"Like Button-liked\"\n            src={require(\"../Images/star-liked.svg\")}\n            className=\"button-icon\"\n            onClick={(e) => this.deleteLike()}\n          />\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"card\">\n        <div className=\" row card-header\">\n          <div\n            className={\n              this.props.post.user_id === sessionStorage.getItem(\"user\")\n                ? \"my-username\"\n                : \"username\"\n            }\n            onClick={(e) => this.showProfileModal(e)}\n          >\n            {this.props.post.name}\n          </div>\n        </div>\n        <div className=\"row card-body\">\n          <img\n            className=\"post-img\"\n            src={\n              !this.props.post.post_pic_url\n                ? require(\"../Images/defaultPic.jpg\")\n                : this.props.post.post_pic_url\n            }\n            alt=\"post\"\n          />\n          <div className=\" row title\">\n            <h4>{this.getTitle()}</h4>\n          </div>\n          <div className=\"caption\">\n            <p>{this.getCaption()}</p>\n          </div>\n          <div className={this.state.collab !== \"\" ? \"collab\" : \"no-display\"}>\n            <p>\n              <b>Collaborators:</b> {collab}\n            </p>\n          </div>\n        </div>\n        <div className=\"row card-footer\">\n          <div className=\"tag\">\n            <p>\n              <b># </b>\n              {this.props.post.post_type}\n            </p>\n          </div>\n          <div className=\"interact-group\">\n            {/* Like Button */}\n            {like}\n            {/* Comment Button */}\n            <button\n              className=\"interact-button\"\n              onClick={(e) => {\n                this.showCommentModal(e);\n              }}\n            >\n              <img\n                alt=\"Comment Button\"\n                src={require(\"../Images/comment.svg\")}\n                className=\"button-icon\"\n              />\n              {this.props.post.comment_flag}\n            </button>\n            <div\n              className={\n                this.props.post.user_id === sessionStorage.getItem(\"user\")\n                  ? \"interact-button-edit-del\"\n                  : \"no-display\"\n              }\n            >\n              <button\n                onClick={(e) => this.showDeleteModal(e)}\n                className=\"trash\"\n              >\n                <img\n                  alt=\"Delete Button\"\n                  src={require(\"../Images/trash.svg\")}\n                  className=\"button-icon\"\n                />\n              </button>\n              <button onClick={(e) => this.showEditModal(e)} className=\"pencil\">\n                <img\n                  alt=\"Edit Button\"\n                  src={require(\"../Images/pencil.svg\")}\n                  className=\"button-icon\"\n                />\n              </button>\n              <button onClick={(e) => this.showModal(e)} className=\"kabab\">\n                <img\n                  alt=\"Post menu\"\n                  src={require(\"../Images/menu.svg\")}\n                  className=\"button-icon\"\n                />\n              </button>\n            </div>\n          </div>\n          <Modal show={this.state.showModal} onClose={(e) => this.showModal(e)}>\n            <MainContent\n              ref={mainContent}\n              modalPage={this.state.modalPage}\n              postId={this.props.post.post_id}\n              time={this.props.post.timestamp}\n              text={caption}\n              title={title}\n              collab={collab}\n              pic={this.props.post.post_pic_url}\n              tag={this.props.post.post_type}\n              onClose={(e) => this.showModal(e)}\n              post={this.props.commentPosts}\n            />\n          </Modal>\n          <ProfileModal\n            show={this.state.showProfile}\n            onClose={(e) => this.showProfileModal(e)}\n            userid={this.props.post.user_id}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}