{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/CommentForm.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport PostingList from \"./PostingList.js\";\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      //keep the form from actually submitting\n      event.preventDefault(); //make the api call to the authentication page\n\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditPosts\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          userid: sessionStorage.getItem(\"user\"),\n          posttype: \"comment\",\n          posttext: this.state.post_text,\n          parentid: this.props.post\n        })\n      }).then(res => res.json()).then(result => {// update the count in the UI manually, to avoid a database hit\n        // this.props.onAddComment(this.props.commentCount + 1);\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.myChangeHandler = event => {\n      this.setState({\n        post_text: event.target.value\n      });\n    };\n\n    this.state = {\n      post_text: \"\",\n      postmessage: \"\"\n    }; // this.postListing = React.createRef();\n  }\n\n  componentDidMount() {\n    console.log(this.props.post);\n  }\n\n  refresh() {\n    window.location.reload(false);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"10\",\n      cols: \"30\",\n      onChange: this.myChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: e => this.refresh(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.state.postmessage));\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/CommentForm.js"],"names":["React","PostingList","CommentForm","Component","constructor","props","submitHandler","event","preventDefault","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","session_token","userid","posttype","posttext","state","post_text","parentid","post","then","res","json","result","error","alert","myChangeHandler","setState","target","value","postmessage","componentDidMount","console","log","refresh","window","location","reload","render","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,aATmB,GASFC,KAAD,IAAW;AACzB;AACAA,MAAAA,KAAK,CAACC,cAAN,GAFyB,CAIzB;;AACAC,MAAAA,KAAK,CAAC,iEAAD,EAAoE;AACvEC,QAAAA,MAAM,EAAE,MAD+D;AAEvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,gBADW;AAEnBC,UAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBC,UAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInBE,UAAAA,MAAM,EAAEH,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAJW;AAKnBG,UAAAA,QAAQ,EAAE,SALS;AAMnBC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,SANF;AAOnBC,UAAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWoB;AAPF,SAAf;AAFiE,OAApE,CAAL,CAYGC,IAZH,CAYSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZjB,EAaGF,IAbH,CAcKG,MAAD,IAAY,CACV;AACA;AACD,OAjBL,EAkBKC,KAAD,IAAW;AACTC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD,OApBL;AAsBD,KApCkB;;AAAA,SAsCnBC,eAtCmB,GAsCAzB,KAAD,IAAW;AAC3B,WAAK0B,QAAL,CAAc;AACZV,QAAAA,SAAS,EAAEhB,KAAK,CAAC2B,MAAN,CAAaC;AADZ,OAAd;AAGD,KA1CkB;;AAEjB,SAAKb,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXa,MAAAA,WAAW,EAAE;AAFF,KAAb,CAFiB,CAMjB;AACD;;AAoCDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlC,KAAL,CAAWoB,IAAvB;AACD;;AACDe,EAAAA,OAAO,GAAG;AACRC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKtC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAU,MAAA,IAAI,EAAC,IAAf;AAAoB,MAAA,IAAI,EAAC,IAAzB;AAA8B,MAAA,QAAQ,EAAE,KAAK0B,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAGa,CAAD,IAAO,KAAKL,OAAL,CAAaK,CAAb,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaG,KAAKvB,KAAL,CAAWc,WAbd,CADF,CADF;AAmBD;;AAtEsD","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport PostingList from \"./PostingList.js\";\n\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post_text: \"\",\n      postmessage: \"\",\n    };\n    // this.postListing = React.createRef();\n  }\n\n  submitHandler = (event) => {\n    //keep the form from actually submitting\n    event.preventDefault();\n\n    //make the api call to the authentication page\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditPosts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        posttype: \"comment\",\n        posttext: this.state.post_text,\n        parentid: this.props.post,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          // update the count in the UI manually, to avoid a database hit\n          // this.props.onAddComment(this.props.commentCount + 1);\n        },\n        (error) => {\n          alert(\"error!\");\n        }\n      );\n  };\n\n  myChangeHandler = (event) => {\n    this.setState({\n      post_text: event.target.value,\n    });\n  };\n  componentDidMount() {\n    console.log(this.props.post);\n  }\n  refresh() {\n    window.location.reload(false);\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.submitHandler}>\n          <label>\n            <br />\n            <textarea rows=\"10\" cols=\"30\" onChange={this.myChangeHandler} />\n          </label>\n          <br />\n\n          <input\n            type=\"submit\"\n            value=\"submit\"\n            onClick={(e) => this.refresh(e)}\n          />\n          <br />\n          {this.state.postmessage}\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}