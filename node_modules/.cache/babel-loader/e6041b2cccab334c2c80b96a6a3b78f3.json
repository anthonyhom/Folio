{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/Post.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport \"../css/post.css\";\nimport CommentForm from \"./CommentForm.js\";\nimport Modal from \"./Modal\";\nimport EditPost from \"./EditPost\";\nimport CommentList from \"./CommentList.js\";\n\nclass MainContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.deletePost = event => {\n      //make the api call to the authentication page\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"deletePosts\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          postid: this.props.postId\n        })\n      }).then(res => res.json()).then(result => {\n        console.log(result);\n\n        if (result.Status === \"SUCCESS - Deleted 1 Rows\") {\n          window.location.reload(false);\n        } else {\n          console.log(result.Status);\n        }\n      }, error => {\n        alert(\"error!\");\n      }).catch(err => {\n        console.error(\"Request failed\");\n      });\n    };\n\n    this.handler = this.handler.bind(this);\n    this.state = {\n      section: this.props.modalPage,\n      comments: \"\"\n    };\n  }\n\n  handler() {\n    this.setState({\n      section: \"comment\"\n    });\n  }\n\n  // handleChange(e) {\n  //   this.setState({\n  //     ...this.state,\n  //     [e.target.name]: e.target.value\n  //   });\n  // }\n  handleDelete(e) {\n    this.setState({\n      section: \"delete\"\n    });\n  }\n\n  handleEdit(e) {\n    this.setState({\n      section: \"edit\"\n    });\n  }\n\n  getCommentCount() {\n    if (!this.state.comments || this.state.comments === \"0\") {\n      return 0;\n    }\n\n    return parseInt(this.state.comments);\n  }\n\n  render() {\n    if (this.state.section === \"options\") {\n      return React.createElement(\"div\", {\n        className: \"modal-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button1-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button1\",\n        onClick: e => this.handleEdit(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Edit\"))), React.createElement(\"div\", {\n        className: \"button2-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button2\",\n        onClick: e => this.handleDelete(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Delete\"))));\n    } else if (this.state.section === \"delete\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mod-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Are You Sure?\"), React.createElement(\"div\", {\n        className: \"modal-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button1-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button1\",\n        onClick: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"div\", {\n        className: \"button2-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button2\",\n        onClick: e => this.deletePost(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Yes\")))));\n    } else if (this.state.section === \"edit\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(EditPost, {\n        postId: this.props.postId,\n        time: this.props.time,\n        text: this.props.text,\n        title: this.props.title,\n        collab: this.props.collab,\n        pic: this.props.pic,\n        tag: this.props.tag,\n        onClose: this.props.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    } else if (this.state.section === \"comment\") {\n      return React.createElement(\"div\", {\n        className: \"comment-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(CommentList, {\n        posts: this.props.postId,\n        error: this.props.error,\n        isLoaded: this.props.isLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-above-commentForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Add your comment!\")), React.createElement(CommentForm, {\n        post: this.props.postId,\n        handler: this.handler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showDeleteModal = e => {\n      this.setState({\n        showModal: !this.state.showModal,\n        modalPage: \"delete\"\n      });\n    };\n\n    this.showCommentModal = e => {\n      this.setState({\n        showModal: !this.state.showModal,\n        modalPage: \"comment\",\n        commentPosts: this.props.post\n      }); // console.log(this.props.post.post_id);\n    };\n\n    this.showEditModal = e => {\n      this.setState({\n        showModal: !this.state.showModal,\n        modalPage: \"edit\"\n      });\n    };\n\n    this.showModal = e => {\n      this.setState({\n        showModal: !this.state.showModal,\n        modalPage: \"options\"\n      });\n    };\n\n    this.setCommentCount = newcount => {\n      this.setState({\n        comments: newcount\n      });\n    };\n\n    this.getTitle = () => {\n      var separator = this.props.post.post_text.indexOf(\"~@~\");\n      this.state.title = this.props.post.post_text.substring(0, separator);\n      return this.state.title;\n    };\n\n    this.getCaption = () => {\n      var titleSep = this.props.post.post_text.indexOf(\"~@~\");\n      var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n\n      if (collabSep !== -1) {\n        //Some Collabs\n        this.state.caption = this.props.post.post_text.substring(titleSep + 3, collabSep);\n        return this.state.caption;\n      } else {\n        //No collabs\n        this.state.caption = this.props.post.post_text.substring(titleSep + 3, this.props.post.post_text.length);\n        return this.state.caption;\n      }\n    };\n\n    this.getCollab = () => {\n      var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n\n      if (collabSep !== -1) {\n        //Some Collabs\n        this.state.collab = this.props.post.post_text.substring(collabSep + 3, this.props.post.post_text.length);\n        return this.state.collab;\n      } else {\n        //No collabs\n        return \"\";\n      }\n    };\n\n    this.state = {\n      showModal: false,\n      comments: this.props.post.comment_flag,\n      title: \"\",\n      caption: \"\",\n      collab: \"\",\n      modalPage: \"\",\n      likes: false,\n      commentPosts: \"\"\n    };\n    this.post = React.createRef();\n  }\n\n  addLike(e) {\n    // var likedUser = this.props.post.user_id;\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        // userid: sessionStorage.getItem(\"user\"),\n        userid: this.props.post.user_id,\n        artifacturl: sessionStorage.getItem(\"dname\") + \" has liked your post\",\n        artifacttype: \"like\",\n        artifactcategory: \"Notification\"\n      })\n    });\n    console.log(this.props.post.user_id);\n    this.state.likes = true; // return (\n    //   <div>\n    //     <button className=\"button-icon-red\">\n    //       <img\n    //         alt=\"\"\n    //         src={require(\"../Images/comment.svg\")}\n    //         className=\"button-icon-red\"\n    //       />\n    //     </button>\n    //   </div>\n    // );\n  }\n\n  addComment(e) {\n    // var likedUser = this.props.post.user_id;\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        // userid: sessionStorage.getItem(\"user\"),\n        userid: this.props.post.user_id,\n        artifacturl: sessionStorage.getItem(\"dname\") + \" has left a comment on your post\",\n        artifacttype: \"comment\",\n        artifactcategory: \"Notification\"\n      })\n    });\n    console.log(this.props.post.user_id);\n    this.state.likes = true; // return (\n    //   <div>\n    //     <button className=\"button-icon-red\">\n    //       <img\n    //         alt=\"\"\n    //         src={require(\"../Images/comment.svg\")}\n    //         className=\"button-icon-red\"\n    //       />\n    //     </button>\n    //   </div>\n    // );\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n\n    return \"comments hide\";\n  } // conditionalDisplay() {\n  //   console.log(\"Parent is \" + this.props.post.parent_id);\n  //   // if (this.props.post.parent_id) {\n  //   //   return \"\";\n  //   // } else {\n  //   return (\n  //     <div className=\"comment-block\">\n  //       <div className=\"comment-indicator\">\n  //         <div className=\"comment-indicator-text\">\n  //           {this.getCommentCount()} Comments\n  //         </div>\n  //       </div>\n  //       <div>\n  //         <CommentForm\n  //           onAddComment={this.setCommentCount}\n  //           parent={this.props.post.post_id}\n  //           commentCount={this.getCommentCount()}\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  //   // }\n  // }\n  // render() {\n  //   // console.log(this.props);\n  //   var separator = this.props.post.post_text.indexOf(\"~@~\");\n  //   this.state.title = this.props.post.post_text.substring(0, separator);\n  //   this.state.caption = this.props.post.post_text.substring(\n  //     separator + 3,\n  //     this.props.post.post_text.length\n  //   );\n  //   // console.log(\"THIS IS TITLE: \", this.state.title);\n  //   // console.log(\"THIS IS BODY: \", this.state.caption);\n  //   // this.getTags();\n\n\n  render() {\n    // console.log(this.props.post);\n    // console.log(\"THIS IS SESSION ID \", sessionStorage.getItem(\"user\"));\n    let mainContent = React.createRef();\n    let title = this.getTitle();\n    let caption = this.getCaption();\n    let collab = this.getCollab();\n    const {\n      commentPosts\n    } = this.state;\n    return (// <div key={this.props.post.post_id}>\n      //   {this.props.post.user_id} {this.props.post.timestamp} <br />{\" \"}\n      //   {this.props.post.post_text}\n      React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \" row card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, this.props.post.name)), React.createElement(\"div\", {\n        className: \"row card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"post-img\",\n        src: this.props.post.post_pic_url,\n        alt: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \" row title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, title)), React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, caption)), React.createElement(\"div\", {\n        className: this.state.collab !== \"\" ? \"collab\" : \"no-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Collaborators:\"), \" \", collab))), React.createElement(\"div\", {\n        className: \"row card-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"# \"), this.props.post.post_type)), React.createElement(\"div\", {\n        className: \"interact-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"interact-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"../Images/star.svg\"),\n        className: \"button-icon\",\n        onClick: e => this.addLike(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"interact-button\",\n        onClick: e => {\n          this.showCommentModal(e);\n          this.addComment(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"../Images/comment.svg\"),\n        className: \"button-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      })), this.props.post.comment_flag, React.createElement(\"div\", {\n        className: this.props.post.user_id === sessionStorage.getItem(\"user\") ? \"interact-button-edit-del\" : \"no-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: e => this.showDeleteModal(e),\n        className: \"trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"../Images/trash.svg\"),\n        className: \"button-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: e => this.showEditModal(e),\n        className: \"pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"../Images/pencil.svg\"),\n        className: \"button-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: e => this.showModal(e),\n        className: \"kabab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"../Images/menu.svg\"),\n        className: \"button-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }))))), React.createElement(Modal, {\n        show: this.state.showModal,\n        onClose: e => this.showModal(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(MainContent, {\n        ref: mainContent,\n        modalPage: this.state.modalPage,\n        postId: this.props.post.post_id,\n        time: this.props.post.timestamp,\n        text: caption,\n        title: title,\n        collab: collab,\n        pic: this.props.post.post_pic_url,\n        tag: this.props.post.post_type,\n        onClose: e => this.showModal(e),\n        post: this.props.commentPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      })))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/Post.js"],"names":["React","CommentForm","Modal","EditPost","CommentList","MainContent","Component","constructor","props","_isMounted","onClose","e","deletePost","event","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","session_token","postid","postId","then","res","json","result","console","log","Status","window","location","reload","error","alert","catch","err","handler","bind","state","section","modalPage","comments","setState","handleDelete","handleEdit","getCommentCount","parseInt","render","time","text","title","collab","pic","tag","isLoaded","Post","showDeleteModal","showModal","showCommentModal","commentPosts","post","showEditModal","setCommentCount","newcount","getTitle","separator","post_text","indexOf","substring","getCaption","titleSep","collabSep","caption","length","getCollab","comment_flag","likes","createRef","addLike","userid","artifacturl","artifacttype","artifactcategory","addComment","showHideComments","mainContent","name","post_pic_url","post_type","require","post_id","timestamp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport \"../css/post.css\";\nimport CommentForm from \"./CommentForm.js\";\nimport Modal from \"./Modal\";\nimport EditPost from \"./EditPost\";\nimport CommentList from \"./CommentList.js\";\n\nclass MainContent extends React.Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.handler = this.handler.bind(this);\n    this.state = {\n      section: this.props.modalPage,\n      comments: \"\",\n    };\n  }\n  handler() {\n    this.setState({\n      section: \"comment\",\n    });\n  }\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  deletePost = (event) => {\n    //make the api call to the authentication page\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"deletePosts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        postid: this.props.postId,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          if (result.Status === \"SUCCESS - Deleted 1 Rows\") {\n            window.location.reload(false);\n          } else {\n            console.log(result.Status);\n          }\n        },\n        (error) => {\n          alert(\"error!\");\n        }\n      )\n      .catch((err) => {\n        console.error(\"Request failed\");\n      });\n  };\n\n  // handleChange(e) {\n  //   this.setState({\n  //     ...this.state,\n  //     [e.target.name]: e.target.value\n  //   });\n  // }\n\n  handleDelete(e) {\n    this.setState({\n      section: \"delete\",\n    });\n  }\n\n  handleEdit(e) {\n    this.setState({\n      section: \"edit\",\n    });\n  }\n  getCommentCount() {\n    if (!this.state.comments || this.state.comments === \"0\") {\n      return 0;\n    }\n    return parseInt(this.state.comments);\n  }\n  render() {\n    if (this.state.section === \"options\") {\n      return (\n        <div className=\"modal-buttons\">\n          <div className=\"button1-container\">\n            <button className=\"button1\" onClick={(e) => this.handleEdit(e)}>\n              <span>Edit</span>\n            </button>\n          </div>\n          <div className=\"button2-container\">\n            <button className=\"button2\" onClick={(e) => this.handleDelete(e)}>\n              <span>Delete</span>\n            </button>\n          </div>\n        </div>\n      );\n    } else if (this.state.section === \"delete\") {\n      return (\n        <div>\n          <div className=\"mod-title\">Are You Sure?</div>\n          <div className=\"modal-buttons\">\n            <div className=\"button1-container\">\n              <button className=\"button1\" onClick={this.onClose}>\n                <span>No</span>\n              </button>\n            </div>\n            <div className=\"button2-container\">\n              <button className=\"button2\" onClick={(e) => this.deletePost(e)}>\n                <span>Yes</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.state.section === \"edit\") {\n      return (\n        <div>\n          <EditPost\n            postId={this.props.postId}\n            time={this.props.time}\n            text={this.props.text}\n            title={this.props.title}\n            collab={this.props.collab}\n            pic={this.props.pic}\n            tag={this.props.tag}\n            onClose={this.props.onClose}\n          />\n        </div>\n      );\n    } else if (this.state.section === \"comment\") {\n      return (\n        <div className=\"comment-modal\">\n          <CommentList\n            posts={this.props.postId}\n            error={this.props.error}\n            isLoaded={this.props.isLoaded}\n          />\n          <div className=\"text-above-commentForm\">\n            <h1>Add your comment!</h1>\n          </div>\n          <CommentForm post={this.props.postId} handler={this.handler} />\n        </div>\n      );\n    }\n  }\n}\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      comments: this.props.post.comment_flag,\n      title: \"\",\n      caption: \"\",\n      collab: \"\",\n      modalPage: \"\",\n      likes: false,\n      commentPosts: \"\",\n    };\n    this.post = React.createRef();\n  }\n\n  showDeleteModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalPage: \"delete\",\n    });\n  };\n  showCommentModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalPage: \"comment\",\n      commentPosts: this.props.post,\n    });\n    // console.log(this.props.post.post_id);\n  };\n  showEditModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalPage: \"edit\",\n    });\n  };\n\n  showModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalPage: \"options\",\n    });\n  };\n\n  setCommentCount = (newcount) => {\n    this.setState({\n      comments: newcount,\n    });\n  };\n  addLike(e) {\n    // var likedUser = this.props.post.user_id;\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        // userid: sessionStorage.getItem(\"user\"),\n        userid: this.props.post.user_id,\n        artifacturl: sessionStorage.getItem(\"dname\") + \" has liked your post\",\n        artifacttype: \"like\",\n        artifactcategory: \"Notification\",\n      }),\n    });\n    console.log(this.props.post.user_id);\n    this.state.likes = true;\n    // return (\n    //   <div>\n    //     <button className=\"button-icon-red\">\n    //       <img\n    //         alt=\"\"\n    //         src={require(\"../Images/comment.svg\")}\n    //         className=\"button-icon-red\"\n    //       />\n    //     </button>\n    //   </div>\n    // );\n  }\n  addComment(e) {\n    // var likedUser = this.props.post.user_id;\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        // userid: sessionStorage.getItem(\"user\"),\n        userid: this.props.post.user_id,\n        artifacturl:\n          sessionStorage.getItem(\"dname\") + \" has left a comment on your post\",\n        artifacttype: \"comment\",\n        artifactcategory: \"Notification\",\n      }),\n    });\n    console.log(this.props.post.user_id);\n    this.state.likes = true;\n    // return (\n    //   <div>\n    //     <button className=\"button-icon-red\">\n    //       <img\n    //         alt=\"\"\n    //         src={require(\"../Images/comment.svg\")}\n    //         className=\"button-icon-red\"\n    //       />\n    //     </button>\n    //   </div>\n    // );\n  }\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n    return \"comments hide\";\n  }\n\n  // conditionalDisplay() {\n  //   console.log(\"Parent is \" + this.props.post.parent_id);\n  //   // if (this.props.post.parent_id) {\n  //   //   return \"\";\n  //   // } else {\n  //   return (\n  //     <div className=\"comment-block\">\n  //       <div className=\"comment-indicator\">\n  //         <div className=\"comment-indicator-text\">\n  //           {this.getCommentCount()} Comments\n  //         </div>\n  //       </div>\n  //       <div>\n  //         <CommentForm\n  //           onAddComment={this.setCommentCount}\n  //           parent={this.props.post.post_id}\n  //           commentCount={this.getCommentCount()}\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  //   // }\n  // }\n  // render() {\n  //   // console.log(this.props);\n\n  //   var separator = this.props.post.post_text.indexOf(\"~@~\");\n  //   this.state.title = this.props.post.post_text.substring(0, separator);\n  //   this.state.caption = this.props.post.post_text.substring(\n  //     separator + 3,\n  //     this.props.post.post_text.length\n  //   );\n\n  //   // console.log(\"THIS IS TITLE: \", this.state.title);\n  //   // console.log(\"THIS IS BODY: \", this.state.caption);\n  //   // this.getTags();\n  getTitle = () => {\n    var separator = this.props.post.post_text.indexOf(\"~@~\");\n    this.state.title = this.props.post.post_text.substring(0, separator);\n    return this.state.title;\n  };\n\n  // showComment = () => {\n  //   return (\n  //     <div>\n  //       <MainContent section={\"edit\"} />\n  //       please\n  //       <CommentList\n  //         commentPosts={this.props.commentPosts}\n  //         error={this.props.error}\n  //         isLoaded={this.props.isLoaded}\n  //       />\n  //       <CommentForm />\n  //     </div>\n  //   );\n  // };\n  getCaption = () => {\n    var titleSep = this.props.post.post_text.indexOf(\"~@~\");\n    var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n    if (collabSep !== -1) {\n      //Some Collabs\n      this.state.caption = this.props.post.post_text.substring(\n        titleSep + 3,\n        collabSep\n      );\n      return this.state.caption;\n    } else {\n      //No collabs\n      this.state.caption = this.props.post.post_text.substring(\n        titleSep + 3,\n        this.props.post.post_text.length\n      );\n      return this.state.caption;\n    }\n  };\n  getCollab = () => {\n    var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n    if (collabSep !== -1) {\n      //Some Collabs\n      this.state.collab = this.props.post.post_text.substring(\n        collabSep + 3,\n        this.props.post.post_text.length\n      );\n      return this.state.collab;\n    } else {\n      //No collabs\n      return \"\";\n    }\n  };\n\n  render() {\n    // console.log(this.props.post);\n    // console.log(\"THIS IS SESSION ID \", sessionStorage.getItem(\"user\"));\n    let mainContent = React.createRef();\n    let title = this.getTitle();\n    let caption = this.getCaption();\n    let collab = this.getCollab();\n    const { commentPosts } = this.state;\n\n    return (\n      // <div key={this.props.post.post_id}>\n      //   {this.props.post.user_id} {this.props.post.timestamp} <br />{\" \"}\n      //   {this.props.post.post_text}\n\n      <div className=\"card\">\n        <div className=\" row card-header\">\n          <div className=\"username\">{this.props.post.name}</div>\n        </div>\n        <div className=\"row card-body\">\n          <img\n            className=\"post-img\"\n            src={this.props.post.post_pic_url}\n            alt=\"post\"\n          />\n          <div className=\" row title\">\n            <h4>{title}</h4>\n          </div>\n          <div className=\"caption\">\n            <p>{caption}</p>\n          </div>\n          <div className={this.state.collab !== \"\" ? \"collab\" : \"no-display\"}>\n            <p>\n              <b>Collaborators:</b> {collab}\n            </p>\n          </div>\n        </div>\n        <div className=\"row card-footer\">\n          <div className=\"tag\">\n            <p>\n              <b># </b>\n              {this.props.post.post_type}\n            </p>\n          </div>\n          <div className=\"interact-group\">\n            {/* Like Button */}\n            <button className=\"interact-button\">\n              <img\n                alt=\"\"\n                src={require(\"../Images/star.svg\")}\n                className=\"button-icon\"\n                onClick={(e) => this.addLike()}\n              />\n            </button>\n            {/* Comment Button */}\n            <button\n              className=\"interact-button\"\n              onClick={(e) => {\n                this.showCommentModal(e);\n                this.addComment(e);\n              }}\n            >\n              <img\n                alt=\"\"\n                src={require(\"../Images/comment.svg\")}\n                className=\"button-icon\"\n              />\n            </button>\n            {this.props.post.comment_flag}\n            {/* Edit/Delete Button */}\n            <div\n              className={\n                this.props.post.user_id === sessionStorage.getItem(\"user\")\n                  ? \"interact-button-edit-del\"\n                  : \"no-display\"\n              }\n            >\n              <button\n                onClick={(e) => this.showDeleteModal(e)}\n                className=\"trash\"\n              >\n                <img\n                  alt=\"\"\n                  src={require(\"../Images/trash.svg\")}\n                  className=\"button-icon\"\n                />\n              </button>\n              <button onClick={(e) => this.showEditModal(e)} className=\"pencil\">\n                <img\n                  alt=\"\"\n                  src={require(\"../Images/pencil.svg\")}\n                  className=\"button-icon\"\n                />\n              </button>\n              <button onClick={(e) => this.showModal(e)} className=\"kabab\">\n                <img\n                  alt=\"\"\n                  src={require(\"../Images/menu.svg\")}\n                  className=\"button-icon\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n        {/* </div> */}\n        <Modal show={this.state.showModal} onClose={(e) => this.showModal(e)}>\n          <MainContent\n            ref={mainContent}\n            modalPage={this.state.modalPage}\n            postId={this.props.post.post_id}\n            time={this.props.post.timestamp}\n            text={caption}\n            title={title}\n            collab={collab}\n            pic={this.props.post.post_pic_url}\n            tag={this.props.post.post_type}\n            onClose={(e) => this.showModal(e)}\n            post={this.props.commentPosts}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}