{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/PostingList.js\";\nimport React from \"react\";\nimport Post from \"./Post.js\";\nexport default class PostingList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeButton = (button, buttonState) => {\n      if (buttonState === \"Follow\") {\n        if (button === \"u1Status\") {\n          this.setState({\n            u1Status: \"Unfollow\"\n          });\n        } else if (button === \"u2Status\") {\n          this.setState({\n            u2Status: \"Unfollow\"\n          });\n        }\n\n        if (button === \"u3Status\") {\n          this.setState({\n            u3Status: \"Unfollow\"\n          });\n        }\n      } else if (buttonState === \"Unfollow\") {\n        if (button === \"u1Status\") {\n          this.setState({\n            u1Status: \"Follow\"\n          });\n        } else if (button === \"u2Status\") {\n          this.setState({\n            u2Status: \"Follow\"\n          });\n        }\n\n        if (button === \"u3Status\") {\n          this.setState({\n            u3Status: \"Follow\"\n          });\n        }\n      }\n    };\n\n    this.state = {\n      error: null,\n      comments: []\n    };\n  } // getTitle = postid => {\n  //   //make the api call to the authentication page\n  //   fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/ptcontroller.php\", {\n  //     method: \"post\",\n  //     body: JSON.stringify({\n  //       action: \"getPostTags\",\n  //       postid: postid\n  //     })\n  //   })\n  //     .then(res => res.json())\n  //     .then(\n  //       result => {\n  //         if (result.post_tags !== undefined) {\n  //           for (var i = 0; i < result.post_tags.length; i++) {\n  //             if (result.post_tags[i].tag_type === \"Title\") {\n  //               // console.log(result.post_tags[i].tag);\n  //               this.title = result.post_tags[i].tag;\n  //             }\n  //           }\n  //         }\n  //         console.log(this.title);\n  //       },\n  //       error => {\n  //         alert(\"error!\");\n  //       }\n  //     );\n  //   return this.title;\n  // };\n\n\n  render() {\n    //this.loadPosts();\n    const {\n      error,\n      isLoaded,\n      posts\n    } = this.props;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" Error: \", error.message, \" \");\n    } else if (this.state.hasConnections === false && this.props.onMain === \"main\") {\n      this.checkConnections();\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" \");\n    } else if (this.props.type == \"comment\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.comments.map(post => React.createElement(Post, {\n        key: post.post_id,\n        post: post,\n        notifcount: this.props.notifcount,\n        notificationid: this.props.notificationid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })));\n    } else {\n      // this.getTitle(125);\n      // console.log(this.state.title);\n      // var titles = [];\n      // var genres = [];\n      // for (var i = 0; i < posts.length; i++) {\n      //   // console.log(this.getTitle(posts[i].post_id));\n      //   titles[i] = this.getTitle(posts[i].post_id);\n      //   genres[i] = this.getGenre(posts[i].post_id);\n      // }\n      // console.log(titles);\n      console.log(\"plcount: \" + this.props.notifcount);\n      console.log(\"plid\" + this.props.notificationid);\n      return React.createElement(\"div\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, posts.map(post => React.createElement(Post, {\n        key: post.post_id,\n        post: post,\n        type: this.props.type,\n        notifcount: this.props.notifcount,\n        notificationid: this.props.notificationid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/PostingList.js"],"names":["React","Post","PostingList","Component","constructor","props","changeButton","button","buttonState","setState","u1Status","u2Status","u3Status","state","error","comments","render","isLoaded","posts","message","hasConnections","onMain","checkConnections","type","map","post","post_id","notifcount","notificationid","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Post from \"./Post.js\";\n\nexport default class PostingList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      comments: [],\n    };\n  }\n\n  // getTitle = postid => {\n  //   //make the api call to the authentication page\n  //   fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/ptcontroller.php\", {\n  //     method: \"post\",\n  //     body: JSON.stringify({\n  //       action: \"getPostTags\",\n  //       postid: postid\n  //     })\n  //   })\n  //     .then(res => res.json())\n  //     .then(\n  //       result => {\n  //         if (result.post_tags !== undefined) {\n  //           for (var i = 0; i < result.post_tags.length; i++) {\n  //             if (result.post_tags[i].tag_type === \"Title\") {\n  //               // console.log(result.post_tags[i].tag);\n  //               this.title = result.post_tags[i].tag;\n  //             }\n  //           }\n  //         }\n  //         console.log(this.title);\n  //       },\n  //       error => {\n  //         alert(\"error!\");\n  //       }\n  //     );\n  //   return this.title;\n  // };\n\n  changeButton = (button, buttonState) => {\n    if (buttonState === \"Follow\") {\n      if (button === \"u1Status\") {\n        this.setState({\n          u1Status: \"Unfollow\",\n        });\n      } else if (button === \"u2Status\") {\n        this.setState({\n          u2Status: \"Unfollow\",\n        });\n      }\n      if (button === \"u3Status\") {\n        this.setState({\n          u3Status: \"Unfollow\",\n        });\n      }\n    } else if (buttonState === \"Unfollow\") {\n      if (button === \"u1Status\") {\n        this.setState({\n          u1Status: \"Follow\",\n        });\n      } else if (button === \"u2Status\") {\n        this.setState({\n          u2Status: \"Follow\",\n        });\n      }\n      if (button === \"u3Status\") {\n        this.setState({\n          u3Status: \"Follow\",\n        });\n      }\n    }\n  };\n\n  render() {\n    //this.loadPosts();\n    const { error, isLoaded, posts } = this.props;\n    if (error) {\n      return <div> Error: {error.message} </div>;\n    } else if (\n      this.state.hasConnections === false &&\n      this.props.onMain === \"main\"\n    ) {\n      this.checkConnections();\n    } else if (!isLoaded) {\n      return <div> </div>;\n    } else if (this.props.type == \"comment\") {\n      return (\n        <div>\n          {/* <Post\n        post={posts[0]}\n        title={\"aslkdlnknnkssksksksk\"}\n        genre={\"c  mcmcmcmcm\"}\n      /> */}\n          {this.state.comments.map((post) => (\n            <Post key={post.post_id} post={post}  notifcount={this.props.notifcount}\n            notificationid={this.props.notificationid}/>\n            \n          ))}\n        </div>\n      );\n    } else {\n      // this.getTitle(125);\n      // console.log(this.state.title);\n      // var titles = [];\n      // var genres = [];\n\n      // for (var i = 0; i < posts.length; i++) {\n      //   // console.log(this.getTitle(posts[i].post_id));\n      //   titles[i] = this.getTitle(posts[i].post_id);\n      //   genres[i] = this.getGenre(posts[i].post_id);\n      // }\n\n      // console.log(titles);\n      console.log(\"plcount: \" + this.props.notifcount);\n      console.log(\"plid\" + this.props.notificationid);\n      return (\n       \n        <div className=\"posts\">\n          {/* <Post\n            post={posts[0]}\n            title={\"aslkdlnknnkssksksksk\"}\n            genre={\"c  mcmcmcmcm\"}\n          /> */}\n          {posts.map((post) => (\n            <Post key={post.post_id} post={post} type={this.props.type}  notifcount={this.props.notifcount}\n            notificationid={this.props.notificationid} />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}