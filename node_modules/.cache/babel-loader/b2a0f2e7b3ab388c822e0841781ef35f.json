{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/ProfileModal.js\";\nimport React from \"react\";\nimport \"../css/profilemodal.css\";\nimport ProfilePostList from \"./ProfilePostList\";\nexport default class ProfileModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.checkConnections = userid => {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getConnections\",\n          userid: sessionStorage.getItem(\"user\"),\n          connectuserid: userid\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.connections !== undefined) {\n          this.setState({\n            followStatus: \"Unfollow\"\n          });\n        }\n      });\n    };\n\n    this.changeConnection = e => {\n      if (this.state.followStatus === \"Unfollow\") {\n        fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: this.props.userid\n          })\n        }).then(res => res.json()).then(result => {\n          let connectionId = result.connections[0].connection_id;\n          return fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n            method: \"post\",\n            body: JSON.stringify({\n              action: \"deleteConnections\",\n              user_id: sessionStorage.getItem(\"user\"),\n              session_token: sessionStorage.getItem(\"token\"),\n              connectionid: connectionId\n            })\n          }).then(res => res.json()).then(result => {\n            if (result.Status.includes(\"SUCCESS\")) {\n              this.setState({\n                followStatus: \"Follow\"\n              });\n              window.location.reload(false);\n            }\n          });\n        });\n      } else {\n        fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: this.props.userid\n          })\n        }).then(res => res.json()).then(result => {\n          console.log(result);\n\n          if (result.connections === undefined) {\n            return fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n              method: \"post\",\n              body: JSON.stringify({\n                action: \"addOrEditConnections\",\n                user_id: sessionStorage.getItem(\"user\"),\n                session_token: sessionStorage.getItem(\"token\"),\n                userid: sessionStorage.getItem(\"user\"),\n                connectuserid: this.props.userid\n              })\n            }).then(res => res.json()).then(result => {\n              console.log(result);\n\n              if (result.Status.includes(\"SUCCESS\")) {\n                this.setState({\n                  followStatus: \"Unfollow\"\n                });\n                window.location.reload(false);\n              }\n            });\n          }\n        });\n      }\n    };\n\n    this.getUserArtifacts = artifact_cat => {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getUserArtifacts\",\n          userid: this.props.userid,\n          artifactcategory: artifact_cat\n        })\n      }).then(res => res.json()).then(result => {\n        if (artifact_cat === \"profilePic\") {\n          this.setState({\n            profilePic: result.user_artifacts[0].artifact_url\n          });\n        } else if (artifact_cat === \"bio\") {\n          this.setState({\n            bio: result.user_artifacts[0].artifact_url\n          });\n        } else if (artifact_cat === \"crowdfunding\") {\n          this.setState({\n            crowdfunding: result.user_artifacts[0].artifact_url\n          });\n        }\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.getUsername = userid => {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/usercontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getUsers\",\n          userid: userid\n        })\n      }).then(res => res.json()).then(result => {\n        this.setState({\n          dname: result.users[0].name\n        });\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.getUserPosts = userid => {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getPosts\",\n          userid: userid,\n          max_posts: \"5\"\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.posts) {\n          this.setState({\n            posts: result.posts\n          });\n        }\n      }, error => {});\n    };\n\n    this.state = {\n      followStatus: \"Follow\",\n      dname: \"\",\n      bio: \"\",\n      crowdfunding: \"\",\n      profilePic: \"\",\n      posts: [],\n      isNotBlocked: true,\n      blockID: \"\",\n      blockStatus: \"\"\n    };\n  }\n\n  checkIfBlocked(userid) {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: userid,\n        artifacttype: \"block-list2\"\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.user_artifacts != null) {\n        this.setState({\n          isNotBlocked: false,\n          blockStatus: \"Blocked\",\n          blockID: result.user_artifacts[0].artifact_id\n        });\n      } else {\n        this.setState({\n          isNotBlocked: true,\n          blockStatus: \"Block\"\n        });\n      }\n    } // (error) => {\n    //   alert(\"error!\");\n    // }\n    );\n  }\n\n  addBlock() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.user_id,\n        artifacttype: \"block-list2\"\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        blockID: result[\"Record Id\"],\n        blockStatus: \"Blocked\",\n        isNotBlocked: false\n      });\n      console.log(result); // console.log(this.state.artifactID);\n    });\n  }\n\n  deleteBlock() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"deleteUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        artifactid: this.state.blockID\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        blockStatus: \"Block\",\n        isNotBlocked: true\n      });\n      console.log(result);\n    });\n    console.log(this.state.blockStatus);\n  }\n\n  componentDidMount() {\n    if (this.state.profilePic === \"\" && this.state.bio === \"\" && this.state.crowdfunding === \"\" && this.state.dname === \"\") {\n      this.getUserArtifacts(\"profilePic\");\n      this.getUserArtifacts(\"bio\");\n      this.getUserArtifacts(\"crowdfunding\");\n      this.getUsername(this.props.userid);\n      this.getUserPosts(this.props.userid);\n      this.checkConnections(this.props.userid);\n      this.checkIfBlocked(this.props.user_id);\n    }\n  }\n\n  render() {\n    let blocked;\n\n    if (!this.props.show) {\n      return null;\n    }\n\n    if (this.state.isNotBlocked == true) {\n      blocked = React.createElement(\"button\", {\n        alt: \"Block Button\",\n        className: \"pfm-block\",\n        onClick: e => this.addBlock(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, this.state.blockStatus));\n    }\n\n    if (this.state.isNotBlocked == false) {\n      blocked = React.createElement(\"button\", {\n        alt: \"Unblock Button\",\n        className: \"pfm-block\",\n        onClick: e => this.deleteBlock(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, this.state.blockStatus));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"pfmodal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pfmodal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pfmodal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"div\", {\n      className: \"pfmodal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pfm-pic-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      className: \"pfm-pic\",\n      src: this.state.profilePic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pfm-user-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pfm-display-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, this.state.dname)), React.createElement(\"div\", {\n      className: \"pfm-user-bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Bio: \"), \" \", this.state.bio), React.createElement(\"div\", {\n      className: \"pfm-crowdfund-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Crowdfunding: \"), this.state.crowdfunding)), React.createElement(\"div\", {\n      className: \"pfm-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"pfm-follow\",\n      onClick: e => this.changeConnection(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, this.state.followStatus)), blocked)), React.createElement(\"div\", {\n      className: \"pfmodal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(ProfilePostList, {\n      posts: this.state.posts,\n      error: \"\",\n      isLoaded: \"\",\n      onMain: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/ProfileModal.js"],"names":["React","ProfilePostList","ProfileModal","Component","constructor","props","onClose","e","checkConnections","userid","fetch","method","body","JSON","stringify","action","sessionStorage","getItem","connectuserid","then","res","json","result","connections","undefined","setState","followStatus","changeConnection","state","connectionId","connection_id","user_id","session_token","connectionid","Status","includes","window","location","reload","console","log","getUserArtifacts","artifact_cat","artifactcategory","profilePic","user_artifacts","artifact_url","bio","crowdfunding","error","alert","getUsername","dname","users","name","getUserPosts","max_posts","posts","isNotBlocked","blockID","blockStatus","checkIfBlocked","artifacturl","artifacttype","artifact_id","addBlock","deleteBlock","artifactid","componentDidMount","render","blocked","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,OAfmB,GAeRC,CAAD,IAAO;AACf,WAAKF,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWC,OAAX,CAAmBC,CAAnB,CAAtB;AACD,KAjBkB;;AAAA,SAmBnBC,gBAnBmB,GAmBCC,MAAD,IAAY;AAC7BC,MAAAA,KAAK,CACH,uEADG,EAEH;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,gBADW;AAEnBN,UAAAA,MAAM,EAAEO,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFW;AAGnBC,UAAAA,aAAa,EAAET;AAHI,SAAf;AAFR,OAFG,CAAL,CAWGU,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAYSG,MAAD,IAAY;AAChB,YAAIA,MAAM,CAACC,WAAP,KAAuBC,SAA3B,EAAsC;AACpC,eAAKC,QAAL,CAAc;AACZC,YAAAA,YAAY,EAAE;AADF,WAAd;AAGD;AACF,OAlBH;AAmBD,KAvCkB;;AAAA,SAyCnBC,gBAzCmB,GAyCCpB,CAAD,IAAO;AACxB,UAAI,KAAKqB,KAAL,CAAWF,YAAX,KAA4B,UAAhC,EAA4C;AAC1ChB,QAAAA,KAAK,CACH,uEADG,EAEH;AACEC,UAAAA,MAAM,EAAE,MADV;AAEEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,MAAM,EAAE,gBADW;AAEnBN,YAAAA,MAAM,EAAEO,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFW;AAGnBC,YAAAA,aAAa,EAAE,KAAKb,KAAL,CAAWI;AAHP,WAAf;AAFR,SAFG,CAAL,CAWGU,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAYSG,MAAD,IAAY;AAChB,cAAIO,YAAY,GAAGP,MAAM,CAACC,WAAP,CAAmB,CAAnB,EAAsBO,aAAzC;AAEA,iBAAOpB,KAAK,CACV,uEADU,EAEV;AACEC,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,cAAAA,MAAM,EAAE,mBADW;AAEnBgB,cAAAA,OAAO,EAAEf,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBe,cAAAA,aAAa,EAAEhB,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInBgB,cAAAA,YAAY,EAAEJ;AAJK,aAAf;AAFR,WAFU,CAAL,CAYJV,IAZI,CAYEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZV,EAaJF,IAbI,CAaEG,MAAD,IAAY;AAChB,gBAAIA,MAAM,CAACY,MAAP,CAAcC,QAAd,CAAuB,SAAvB,CAAJ,EAAuC;AACrC,mBAAKV,QAAL,CAAc;AACZC,gBAAAA,YAAY,EAAE;AADF,eAAd;AAGAU,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;AACF,WApBI,CAAP;AAqBD,SApCH;AAqCD,OAtCD,MAsCO;AACL5B,QAAAA,KAAK,CACH,uEADG,EAEH;AACEC,UAAAA,MAAM,EAAE,MADV;AAEEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,MAAM,EAAE,gBADW;AAEnBN,YAAAA,MAAM,EAAEO,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFW;AAGnBC,YAAAA,aAAa,EAAE,KAAKb,KAAL,CAAWI;AAHP,WAAf;AAFR,SAFG,CAAL,CAWGU,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAYSG,MAAD,IAAY;AAChBiB,UAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;;AACA,cAAIA,MAAM,CAACC,WAAP,KAAuBC,SAA3B,EAAsC;AACpC,mBAAOd,KAAK,CACV,uEADU,EAEV;AACEC,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,MAAM,EAAE,sBADW;AAEnBgB,gBAAAA,OAAO,EAAEf,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBe,gBAAAA,aAAa,EAAEhB,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInBR,gBAAAA,MAAM,EAAEO,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAJW;AAKnBC,gBAAAA,aAAa,EAAE,KAAKb,KAAL,CAAWI;AALP,eAAf;AAFR,aAFU,CAAL,CAaJU,IAbI,CAaEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAbV,EAcJF,IAdI,CAcEG,MAAD,IAAY;AAChBiB,cAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;;AACA,kBAAIA,MAAM,CAACY,MAAP,CAAcC,QAAd,CAAuB,SAAvB,CAAJ,EAAuC;AACrC,qBAAKV,QAAL,CAAc;AACZC,kBAAAA,YAAY,EAAE;AADF,iBAAd;AAGAU,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;AACF,aAtBI,CAAP;AAuBD;AACF,SAvCH;AAwCD;AACF,KA1HkB;;AAAA,SA4HnBG,gBA5HmB,GA4HCC,YAAD,IAAkB;AACnChC,MAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,QAAAA,MAAM,EAAE,MAD6D;AAErEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,kBADW;AAEnBN,UAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI,MAFA;AAGnBkC,UAAAA,gBAAgB,EAAED;AAHC,SAAf;AAF+D,OAAlE,CAAL,CAQGvB,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CAUKG,MAAD,IAAY;AACV,YAAIoB,YAAY,KAAK,YAArB,EAAmC;AACjC,eAAKjB,QAAL,CAAc;AACZmB,YAAAA,UAAU,EAAEtB,MAAM,CAACuB,cAAP,CAAsB,CAAtB,EAAyBC;AADzB,WAAd;AAGD,SAJD,MAIO,IAAIJ,YAAY,KAAK,KAArB,EAA4B;AACjC,eAAKjB,QAAL,CAAc;AACZsB,YAAAA,GAAG,EAAEzB,MAAM,CAACuB,cAAP,CAAsB,CAAtB,EAAyBC;AADlB,WAAd;AAGD,SAJM,MAIA,IAAIJ,YAAY,KAAK,cAArB,EAAqC;AAC1C,eAAKjB,QAAL,CAAc;AACZuB,YAAAA,YAAY,EAAE1B,MAAM,CAACuB,cAAP,CAAsB,CAAtB,EAAyBC;AAD3B,WAAd;AAGD;AACF,OAxBL,EAyBKG,KAAD,IAAW;AACTC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD,OA3BL;AA6BD,KA1JkB;;AAAA,SA4LnBC,WA5LmB,GA4LJ1C,MAAD,IAAY;AACxBC,MAAAA,KAAK,CAAC,iEAAD,EAAoE;AACvEC,QAAAA,MAAM,EAAE,MAD+D;AAEvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,UADW;AAEnBN,UAAAA,MAAM,EAAEA;AAFW,SAAf;AAFiE,OAApE,CAAL,CAOGU,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CASKG,MAAD,IAAY;AACV,aAAKG,QAAL,CAAc;AACZ2B,UAAAA,KAAK,EAAE9B,MAAM,CAAC+B,KAAP,CAAa,CAAb,EAAgBC;AADX,SAAd;AAGD,OAbL,EAcKL,KAAD,IAAW;AACTC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD,OAhBL;AAkBD,KA/MkB;;AAAA,SAiNnBK,YAjNmB,GAiNH9C,MAAD,IAAY;AACzBC,MAAAA,KAAK,CAAC,iEAAD,EAAoE;AACvEC,QAAAA,MAAM,EAAE,MAD+D;AAEvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,UADW;AAEnBN,UAAAA,MAAM,EAAEA,MAFW;AAGnB+C,UAAAA,SAAS,EAAE;AAHQ,SAAf;AAFiE,OAApE,CAAL,CAQGrC,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CAUKG,MAAD,IAAY;AACV,YAAIA,MAAM,CAACmC,KAAX,EAAkB;AAChB,eAAKhC,QAAL,CAAc;AACZgC,YAAAA,KAAK,EAAEnC,MAAM,CAACmC;AADF,WAAd;AAGD;AACF,OAhBL,EAiBKR,KAAD,IAAW,CAAE,CAjBjB;AAmBD,KArOkB;;AAEjB,SAAKrB,KAAL,GAAa;AACXF,MAAAA,YAAY,EAAE,QADH;AAEX0B,MAAAA,KAAK,EAAE,EAFI;AAGXL,MAAAA,GAAG,EAAE,EAHM;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXJ,MAAAA,UAAU,EAAE,EALD;AAMXa,MAAAA,KAAK,EAAE,EANI;AAOXC,MAAAA,YAAY,EAAE,IAPH;AAQXC,MAAAA,OAAO,EAAE,EARE;AASXC,MAAAA,WAAW,EAAE;AATF,KAAb;AAWD;;AA+IDC,EAAAA,cAAc,CAACpD,MAAD,EAAS;AACrBC,IAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,kBADW;AAEnBN,QAAAA,MAAM,EAAEO,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFW;AAGnB6C,QAAAA,WAAW,EAAErD,MAHM;AAInBsD,QAAAA,YAAY,EAAE;AAJK,OAAf;AAF+D,KAAlE,CAAL,CASG5C,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAWKG,MAAD,IAAY;AACV,UAAIA,MAAM,CAACuB,cAAP,IAAyB,IAA7B,EAAmC;AACjC,aAAKpB,QAAL,CAAc;AACZiC,UAAAA,YAAY,EAAE,KADF;AAEZE,UAAAA,WAAW,EAAE,SAFD;AAGZD,UAAAA,OAAO,EAAErC,MAAM,CAACuB,cAAP,CAAsB,CAAtB,EAAyBmB;AAHtB,SAAd;AAKD,OAND,MAMO;AACL,aAAKvC,QAAL,CAAc;AACZiC,UAAAA,YAAY,EAAE,IADF;AAEZE,UAAAA,WAAW,EAAE;AAFD,SAAd;AAID;AACF,KAxBL,CAyBI;AACA;AACA;AA3BJ;AA6BD;;AA6CDK,EAAAA,QAAQ,GAAG;AACTvD,IAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,wBADW;AAEnBgB,QAAAA,OAAO,EAAEf,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBe,QAAAA,aAAa,EAAEhB,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInBR,QAAAA,MAAM,EAAEO,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAJW;AAKnB6C,QAAAA,WAAW,EAAE,KAAKzD,KAAL,CAAW0B,OALL;AAMnBgC,QAAAA,YAAY,EAAE;AANK,OAAf;AAF+D,KAAlE,CAAL,CAWG5C,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAYSG,MAAD,IAAY;AAChB,WAAKG,QAAL,CAAc;AACZkC,QAAAA,OAAO,EAAErC,MAAM,CAAC,WAAD,CADH;AAEZsC,QAAAA,WAAW,EAAE,SAFD;AAGZF,QAAAA,YAAY,EAAE;AAHF,OAAd;AAKAnB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ,EANgB,CAOhB;AACD,KApBH;AAqBD;;AAED4C,EAAAA,WAAW,GAAG;AACZxD,IAAAA,KAAK,CAAC,+DAAD,EAAkE;AACrEC,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,qBADW;AAEnBgB,QAAAA,OAAO,EAAEf,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBe,QAAAA,aAAa,EAAEhB,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInBkD,QAAAA,UAAU,EAAE,KAAKvC,KAAL,CAAW+B;AAJJ,OAAf;AAF+D,KAAlE,CAAL,CASGxC,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSG,MAAD,IAAY;AAChB,WAAKG,QAAL,CAAc;AACZmC,QAAAA,WAAW,EAAE,OADD;AAEZF,QAAAA,YAAY,EAAE;AAFF,OAAd;AAIAnB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACD,KAhBH;AAkBAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWgC,WAAvB;AACD;;AACDQ,EAAAA,iBAAiB,GAAG;AAClB,QACE,KAAKxC,KAAL,CAAWgB,UAAX,KAA0B,EAA1B,IACA,KAAKhB,KAAL,CAAWmB,GAAX,KAAmB,EADnB,IAEA,KAAKnB,KAAL,CAAWoB,YAAX,KAA4B,EAF5B,IAGA,KAAKpB,KAAL,CAAWwB,KAAX,KAAqB,EAJvB,EAKE;AACA,WAAKX,gBAAL,CAAsB,YAAtB;AACA,WAAKA,gBAAL,CAAsB,KAAtB;AACA,WAAKA,gBAAL,CAAsB,cAAtB;AACA,WAAKU,WAAL,CAAiB,KAAK9C,KAAL,CAAWI,MAA5B;AACA,WAAK8C,YAAL,CAAkB,KAAKlD,KAAL,CAAWI,MAA7B;AACA,WAAKD,gBAAL,CAAsB,KAAKH,KAAL,CAAWI,MAAjC;AACA,WAAKoD,cAAL,CAAoB,KAAKxD,KAAL,CAAW0B,OAA/B;AACD;AACF;;AAEDsC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAJ;;AACA,QAAI,CAAC,KAAKjE,KAAL,CAAWkE,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD;;AACD,QAAI,KAAK3C,KAAL,CAAW8B,YAAX,IAA2B,IAA/B,EAAqC;AACnCY,MAAAA,OAAO,GACL;AACE,QAAA,GAAG,EAAC,cADN;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,OAAO,EAAG/D,CAAD,IAAO,KAAK0D,QAAL,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKrC,KAAL,CAAWgC,WAAlB,CALF,CADF;AASD;;AACD,QAAI,KAAKhC,KAAL,CAAW8B,YAAX,IAA2B,KAA/B,EAAsC;AACpCY,MAAAA,OAAO,GACL;AACE,QAAA,GAAG,EAAC,gBADN;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,OAAO,EAAG/D,CAAD,IAAO,KAAK2D,WAAL,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKtC,KAAL,CAAWgC,WAAlB,CALF,CADF;AASD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,KAAKtD,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAgC,MAAA,GAAG,EAAE,KAAKsB,KAAL,CAAWgB,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKhB,KAAL,CAAWwB,KAAhB,CADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,OACkB,KAAKxB,KAAL,CAAWmB,GAD7B,CAJF,EAOE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEG,KAAKnB,KAAL,CAAWoB,YAFd,CAPF,CAJF,EAgBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAGzC,CAAD,IAAO,KAAKoB,gBAAL,CAAsBpB,CAAtB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKqB,KAAL,CAAWF,YAAlB,CAJF,CADF,EAOG4C,OAPH,CAhBF,CANF,EAgCE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,KAAK1C,KAAL,CAAW6B,KADpB;AAEE,MAAA,KAAK,EAAE,EAFT;AAGE,MAAA,QAAQ,EAAE,EAHZ;AAIE,MAAA,MAAM,EAAE,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhCF,CADF,CADF;AA6CD;;AA9WuD","sourcesContent":["import React from \"react\";\nimport \"../css/profilemodal.css\";\nimport ProfilePostList from \"./ProfilePostList\";\nexport default class ProfileModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      followStatus: \"Follow\",\n      dname: \"\",\n      bio: \"\",\n      crowdfunding: \"\",\n      profilePic: \"\",\n      posts: [],\n      isNotBlocked: true,\n      blockID: \"\",\n      blockStatus: \"\",\n    };\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  checkConnections = (userid) => {\n    fetch(\n      \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n      {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getConnections\",\n          userid: sessionStorage.getItem(\"user\"),\n          connectuserid: userid,\n        }),\n      }\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.connections !== undefined) {\n          this.setState({\n            followStatus: \"Unfollow\",\n          });\n        }\n      });\n  };\n\n  changeConnection = (e) => {\n    if (this.state.followStatus === \"Unfollow\") {\n      fetch(\n        \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n        {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: this.props.userid,\n          }),\n        }\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          let connectionId = result.connections[0].connection_id;\n\n          return fetch(\n            \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n            {\n              method: \"post\",\n              body: JSON.stringify({\n                action: \"deleteConnections\",\n                user_id: sessionStorage.getItem(\"user\"),\n                session_token: sessionStorage.getItem(\"token\"),\n                connectionid: connectionId,\n              }),\n            }\n          )\n            .then((res) => res.json())\n            .then((result) => {\n              if (result.Status.includes(\"SUCCESS\")) {\n                this.setState({\n                  followStatus: \"Follow\",\n                });\n                window.location.reload(false);\n              }\n            });\n        });\n    } else {\n      fetch(\n        \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n        {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"getConnections\",\n            userid: sessionStorage.getItem(\"user\"),\n            connectuserid: this.props.userid,\n          }),\n        }\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result);\n          if (result.connections === undefined) {\n            return fetch(\n              \"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\",\n              {\n                method: \"post\",\n                body: JSON.stringify({\n                  action: \"addOrEditConnections\",\n                  user_id: sessionStorage.getItem(\"user\"),\n                  session_token: sessionStorage.getItem(\"token\"),\n                  userid: sessionStorage.getItem(\"user\"),\n                  connectuserid: this.props.userid,\n                }),\n              }\n            )\n              .then((res) => res.json())\n              .then((result) => {\n                console.log(result);\n                if (result.Status.includes(\"SUCCESS\")) {\n                  this.setState({\n                    followStatus: \"Unfollow\",\n                  });\n                  window.location.reload(false);\n                }\n              });\n          }\n        });\n    }\n  };\n\n  getUserArtifacts = (artifact_cat) => {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: this.props.userid,\n        artifactcategory: artifact_cat,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (artifact_cat === \"profilePic\") {\n            this.setState({\n              profilePic: result.user_artifacts[0].artifact_url,\n            });\n          } else if (artifact_cat === \"bio\") {\n            this.setState({\n              bio: result.user_artifacts[0].artifact_url,\n            });\n          } else if (artifact_cat === \"crowdfunding\") {\n            this.setState({\n              crowdfunding: result.user_artifacts[0].artifact_url,\n            });\n          }\n        },\n        (error) => {\n          alert(\"error!\");\n        }\n      );\n  };\n\n  checkIfBlocked(userid) {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUserArtifacts\",\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: userid,\n        artifacttype: \"block-list2\",\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.user_artifacts != null) {\n            this.setState({\n              isNotBlocked: false,\n              blockStatus: \"Blocked\",\n              blockID: result.user_artifacts[0].artifact_id,\n            });\n          } else {\n            this.setState({\n              isNotBlocked: true,\n              blockStatus: \"Block\",\n            });\n          }\n        }\n        // (error) => {\n        //   alert(\"error!\");\n        // }\n      );\n  }\n\n  getUsername = (userid) => {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/usercontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUsers\",\n        userid: userid,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            dname: result.users[0].name,\n          });\n        },\n        (error) => {\n          alert(\"error!\");\n        }\n      );\n  };\n\n  getUserPosts = (userid) => {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        userid: userid,\n        max_posts: \"5\",\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.posts) {\n            this.setState({\n              posts: result.posts,\n            });\n          }\n        },\n        (error) => {}\n      );\n  };\n\n  addBlock() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        userid: sessionStorage.getItem(\"user\"),\n        artifacturl: this.props.user_id,\n        artifacttype: \"block-list2\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          blockID: result[\"Record Id\"],\n          blockStatus: \"Blocked\",\n          isNotBlocked: false,\n        });\n        console.log(result);\n        // console.log(this.state.artifactID);\n      });\n  }\n\n  deleteBlock() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/uacontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"deleteUserArtifacts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        artifactid: this.state.blockID,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          blockStatus: \"Block\",\n          isNotBlocked: true,\n        });\n        console.log(result);\n      });\n\n    console.log(this.state.blockStatus);\n  }\n  componentDidMount() {\n    if (\n      this.state.profilePic === \"\" &&\n      this.state.bio === \"\" &&\n      this.state.crowdfunding === \"\" &&\n      this.state.dname === \"\"\n    ) {\n      this.getUserArtifacts(\"profilePic\");\n      this.getUserArtifacts(\"bio\");\n      this.getUserArtifacts(\"crowdfunding\");\n      this.getUsername(this.props.userid);\n      this.getUserPosts(this.props.userid);\n      this.checkConnections(this.props.userid);\n      this.checkIfBlocked(this.props.user_id);\n    }\n  }\n\n  render() {\n    let blocked;\n    if (!this.props.show) {\n      return null;\n    }\n    if (this.state.isNotBlocked == true) {\n      blocked = (\n        <button\n          alt=\"Block Button\"\n          className=\"pfm-block\"\n          onClick={(e) => this.addBlock()}\n        >\n          <span>{this.state.blockStatus}</span>\n        </button>\n      );\n    }\n    if (this.state.isNotBlocked == false) {\n      blocked = (\n        <button\n          alt=\"Unblock Button\"\n          className=\"pfm-block\"\n          onClick={(e) => this.deleteBlock()}\n        >\n          <span>{this.state.blockStatus}</span>\n        </button>\n      );\n    }\n    return (\n      <div className=\"pfmodal\">\n        <div className=\"pfmodal-content\">\n          <div className=\"pfmodal-header\">\n            <span className=\"close\" onClick={this.onClose}>\n              &times;\n            </span>\n          </div>\n          <div className=\"pfmodal-body\">\n            <div className=\"pfm-pic-container\">\n              <img alt=\"\" className=\"pfm-pic\" src={this.state.profilePic} />\n            </div>\n            <div className=\"pfm-user-info\">\n              <div className=\"pfm-display-name\">\n                <h1>{this.state.dname}</h1>\n              </div>\n              <div className=\"pfm-user-bio\">\n                <h3>Bio: </h3> {this.state.bio}\n              </div>\n              <div className=\"pfm-crowdfund-link\">\n                <h3>Crowdfunding: </h3>\n                {this.state.crowdfunding}\n              </div>\n            </div>\n            <div className=\"pfm-buttons\">\n              <button\n                className=\"pfm-follow\"\n                onClick={(e) => this.changeConnection(e)}\n              >\n                <span>{this.state.followStatus}</span>\n              </button>\n              {blocked}\n            </div>\n          </div>\n          <div className=\"pfmodal-footer\">\n            <ProfilePostList\n              posts={this.state.posts}\n              error={\"\"}\n              isLoaded={\"\"}\n              onMain={\"main\"}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}