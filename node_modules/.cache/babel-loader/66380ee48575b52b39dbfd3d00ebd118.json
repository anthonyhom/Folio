{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/ExplorePostsList.js\";\nimport React from \"react\";\nimport ExPost from \"./ExPosts.js\";\nimport PostForm from \"./PostForm.js\";\nimport \"../css/Explore.css\";\nimport \"../css/grid.css\";\nimport Profile from \"./Profile.js\";\nexport default class ExplorePostsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: [],\n      listType: props.listType,\n      userClicked: \"411\" // specificUser: props.userid,\n\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.specificUser != null) {\n      this.loadUserPosts(this.props.specificUser);\n    } else if (this.props.specificUser == null) {\n      this.loadPosts();\n    }\n\n    console.log(this.props.specificUser);\n  }\n\n  loadPosts(valueFromParent) {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        max_posts: \"10\",\n        posttype: this.props.valueFromParent\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.posts) {\n        this.setState({\n          isLoaded: true,\n          posts: result.posts\n        });\n      }\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    console.log(this.props.valueFromParent);\n  }\n\n  loadUserPosts(user) {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        max_posts: \"10\",\n        userid: this.props.specificUser\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.posts) {\n        this.setState({\n          isLoaded: true,\n          posts: result.posts\n        });\n      }\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    console.log(this.props.valueFromParent);\n  }\n\n  render() {\n    //this.loadPosts();\n    const {\n      error,\n      isLoaded,\n      posts,\n      userClicked\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \" Error: \", error.message, \" \");\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" No posts found \");\n    } else {\n      return React.createElement(\"div\", {\n        class: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, posts.map(post => React.createElement(\"div\", {\n        className: \"grid-posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(ExPost, {\n        key: post.post_id,\n        post: post,\n        type: this.props.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/ExplorePostsList.js"],"names":["React","ExPost","PostForm","Profile","ExplorePostsList","Component","constructor","props","state","error","isLoaded","posts","listType","userClicked","componentDidMount","specificUser","loadUserPosts","loadPosts","console","log","valueFromParent","fetch","method","body","JSON","stringify","action","max_posts","posttype","then","res","json","result","setState","user","userid","render","message","map","post","post_id","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ExPost from \"./ExPosts.js\";\nimport PostForm from \"./PostForm.js\";\nimport \"../css/Explore.css\";\nimport \"../css/grid.css\";\nimport Profile from \"./Profile.js\";\n\nexport default class ExplorePostsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: [],\n      listType: props.listType,\n      userClicked: \"411\",\n      // specificUser: props.userid,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.specificUser != null) {\n      this.loadUserPosts(this.props.specificUser);\n    } else if (this.props.specificUser == null) {\n      this.loadPosts();\n    }\n    console.log(this.props.specificUser);\n  }\n  loadPosts(valueFromParent) {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        max_posts: \"10\",\n        posttype: this.props.valueFromParent,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.posts) {\n            this.setState({\n              isLoaded: true,\n\n              posts: result.posts,\n            });\n          }\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n    console.log(this.props.valueFromParent);\n  }\n  loadUserPosts(user) {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        max_posts: \"10\",\n        userid: this.props.specificUser,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.posts) {\n            this.setState({\n              isLoaded: true,\n\n              posts: result.posts,\n            });\n          }\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n    console.log(this.props.valueFromParent);\n  }\n  render() {\n    //this.loadPosts();\n    const { error, isLoaded, posts, userClicked } = this.state;\n    if (error) {\n      return <div> Error: {error.message} </div>;\n    } else if (!isLoaded) {\n      return <div> No posts found </div>;\n    } else {\n      return (\n        <div class=\"grid\">\n          {posts.map((post) => (\n            <div className={\"grid-posts\"}>\n              <ExPost key={post.post_id} post={post} type={this.props.type} />\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}