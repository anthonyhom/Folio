{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/FollowersList.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport Modal from \"./Modal\";\nimport ProfileModal from \"./ProfileModal.js\";\nimport \"../css/followers-followinglist.css\";\nexport default class FollowersList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showFollowingModal = e => {\n      this.setState({\n        showModal3: !this.state.showModal3\n      });\n    };\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.loadConnections = () => {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getConnections\",\n          connectuserid: sessionStorage.getItem(\"user\")\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.connections !== undefined) {\n          this.setState({\n            connections: result.connections\n          });\n        }\n\n        console.log(result);\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.showProfileModal = e => {\n      this.setState({\n        showProfile: !this.state.showProfile\n      });\n    };\n\n    this.state = {\n      showModal3: false,\n      connections: [],\n      error: null,\n      userid: sessionStorage.getItem(\"user\"),\n      followername: \"\",\n      showProfile: false,\n      currentProfile: \"\"\n    };\n  }\n\n  // getFollowerName(id){\n  //   fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/usercontroller.php\", {\n  //       method: \"post\",\n  //       body: JSON.stringify({\n  //         action: \"getConnections\",\n  //         userid: id,\n  //       })\n  //     })\n  //     .then(res => res.json())\n  //     .then(\n  //       result => {\n  //           if (result.users[0].name !== null) {\n  //               this.setState({\n  //                 followername: result.users[0].name,\n  //               });\n  //               // sessionStorage.setItem(\"dname\", result.users[0].name);\n  //             }\n  //           },\n  //           error => {\n  //               this.setState({\n  //                 error\n  //               });\n  //             }\n  //           );\n  //   }\n  setCurrentProfile(profile_id) {\n    this.setState({\n      currentProfile: profile_id\n    });\n  }\n\n  componentDidMount() {\n    this.loadConnections();\n  }\n\n  render() {\n    //this.loadPosts();\n    const {\n      error,\n      connections\n    } = this.state;\n    let outerModal = React.createRef();\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" Error: \", error.message, \" \");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, connections.map(connection => React.createElement(\"div\", {\n        key: connection.connection_id,\n        className: \"userlist\",\n        onClick: e => {\n          this.showProfileModal(e);\n          this.setCurrentProfile(connection.connection_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, connection.user_name)), React.createElement(ProfileModal, {\n        show: this.state.showProfile,\n        onClose: e => this.showProfileModal(e),\n        userid: this.state.currentProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/FollowersList.js"],"names":["React","Modal","ProfileModal","FollowersList","Component","constructor","props","showFollowingModal","e","setState","showModal3","state","onClose","loadConnections","fetch","method","body","JSON","stringify","action","connectuserid","sessionStorage","getItem","then","res","json","result","connections","undefined","console","log","error","showProfileModal","showProfile","userid","followername","currentProfile","setCurrentProfile","profile_id","componentDidMount","render","outerModal","createRef","message","map","connection","connection_id","user_name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,oCAAP;AAEA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,kBAbmB,GAaGC,CAAD,IAAO;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADZ,OAAd;AAGD,KAjBkB;;AAAA,SAmBnBE,OAnBmB,GAmBRJ,CAAD,IAAO;AACf,WAAKF,KAAL,CAAWM,OAAX,IAAsB,KAAKN,KAAL,CAAWM,OAAX,CAAmBJ,CAAnB,CAAtB;AACD,KArBkB;;AAAA,SAuBnBK,eAvBmB,GAuBD,MAAM;AACtBC,MAAAA,KAAK,CAAC,uEAAD,EAA0E;AAC7EC,QAAAA,MAAM,EAAE,MADqE;AAE7EC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,gBADW;AAEnBC,UAAAA,aAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB;AAFI,SAAf;AAFuE,OAA1E,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CASIG,MAAM,IAAI;AACR,YAAIA,MAAM,CAACC,WAAP,KAAuBC,SAA3B,EAAsC;AACpC,eAAKnB,QAAL,CAAc;AACZkB,YAAAA,WAAW,EAAED,MAAM,CAACC;AADR,WAAd;AAGD;;AACDE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,OAhBL,EAiBIK,KAAK,IAAI;AACP,aAAKtB,QAAL,CAAc;AACZsB,UAAAA;AADY,SAAd;AAGD,OArBL;AAuBD,KA/CkB;;AAAA,SAiDnBC,gBAjDmB,GAiDCxB,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AACZwB,QAAAA,WAAW,EAAE,CAAC,KAAKtB,KAAL,CAAWsB;AADb,OAAd;AAGH,KArDkB;;AAEjB,SAAKtB,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,KADD;AAEXiB,MAAAA,WAAW,EAAE,EAFF;AAGXI,MAAAA,KAAK,EAAE,IAHI;AAIXG,MAAAA,MAAM,EAAEb,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAJG;AAKXa,MAAAA,YAAY,EAAE,EALH;AAMXF,MAAAA,WAAW,EAAE,KANF;AAOXG,MAAAA,cAAc,EAAE;AAPL,KAAb;AASD;;AA4CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,CAACC,UAAD,EAAY;AAC3B,SAAK7B,QAAL,CAAc;AACZ2B,MAAAA,cAAc,EAAEE;AADJ,KAAd;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAK1B,eAAL;AACD;;AAED2B,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAACT,MAAAA,KAAD;AAAQJ,MAAAA;AAAR,QAAuB,KAAKhB,KAAlC;AACA,QAAI8B,UAAU,GAAGzC,KAAK,CAAC0C,SAAN,EAAjB;;AAEA,QAAIX,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcA,KAAK,CAACY,OAApB,MAAP;AACD,KAFD,MAEO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhB,WAAW,CAACiB,GAAZ,CAAgBC,UAAU,IACzB;AAAK,QAAA,GAAG,EAAEA,UAAU,CAACC,aAArB;AAAoC,QAAA,SAAS,EAAC,UAA9C;AAAyD,QAAA,OAAO,EAAGtC,CAAD,IAAO;AAAC,eAAKwB,gBAAL,CAAsBxB,CAAtB;AAAyB,eAAK6B,iBAAL,CAAuBQ,UAAU,CAACC,aAAlC;AAAiD,SAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,UAAU,CAACE,SADd,CADD,CADH,EAME,oBAAC,YAAD;AACA,QAAA,IAAI,EAAE,KAAKpC,KAAL,CAAWsB,WADjB;AAEA,QAAA,OAAO,EAAGzB,CAAD,IAAO,KAAKwB,gBAAL,CAAsBxB,CAAtB,CAFhB;AAGA,QAAA,MAAM,EAAE,KAAKG,KAAL,CAAWyB,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CADF;AAgBD;AACF;;AArHwD","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport Modal from \"./Modal\";\nimport ProfileModal from \"./ProfileModal.js\";\nimport \"../css/followers-followinglist.css\"\n\nexport default class FollowersList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal3: false,\n      connections: [],\n      error: null,\n      userid: sessionStorage.getItem(\"user\"),\n      followername: \"\",\n      showProfile: false,\n      currentProfile: \"\",\n    };\n  }\n\n  showFollowingModal = (e) => {\n    this.setState({\n      showModal3: !this.state.showModal3,\n    });\n  };\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  loadConnections = () => {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/connectioncontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getConnections\",\n        connectuserid: sessionStorage.getItem(\"user\")\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          if (result.connections !== undefined) {\n            this.setState({\n              connections: result.connections\n            });\n          }\n          console.log(result)\n        },\n        error => {\n          this.setState({\n            error\n          });\n        }\n      );\n  }\n\n  showProfileModal = (e) => {\n      this.setState({\n        showProfile: !this.state.showProfile,\n      });\n  };\n\n  // getFollowerName(id){\n  //   fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/usercontroller.php\", {\n  //       method: \"post\",\n  //       body: JSON.stringify({\n  //         action: \"getConnections\",\n  //         userid: id,\n  //       })\n  //     })\n  //     .then(res => res.json())\n  //     .then(\n  //       result => {\n  //           if (result.users[0].name !== null) {\n  //               this.setState({\n  //                 followername: result.users[0].name,\n  //               });\n  //               // sessionStorage.setItem(\"dname\", result.users[0].name);\n  //             }\n  //           },\n  //           error => {\n  //               this.setState({\n  //                 error\n  //               });\n  //             }\n  //           );\n  //   }\n\n  setCurrentProfile(profile_id){\n    this.setState({\n      currentProfile: profile_id\n    })\n  }\n\n  componentDidMount(){\n    this.loadConnections()\n  }\n\n  render() {\n    //this.loadPosts();\n    const {error, connections} = this.state;\n    let outerModal = React.createRef();\n    \n    if (error) {\n      return <div> Error: {error.message} </div>;\n    } else {\n      return (\n        <div>\n          <ul>\n            {connections.map(connection => (\n              <div key={connection.connection_id} className=\"userlist\" onClick={(e) => {this.showProfileModal(e);this.setCurrentProfile(connection.connection_id)}}>\n                {connection.user_name}\n              </div>\n            ))}\n            <ProfileModal\n            show={this.state.showProfile}\n            onClose={(e) => this.showProfileModal(e)}\n            userid={this.state.currentProfile}\n            />\n          </ul>\n        </div>\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}