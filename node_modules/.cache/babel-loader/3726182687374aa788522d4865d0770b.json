{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhom/Documents/atam-web/src/Component/ExPosts.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport CommentForm from \"./CommentForm.js\";\nexport default class ExPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = e => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.setCommentCount = newcount => {\n      this.setState({\n        comments: newcount\n      });\n    };\n\n    this.getTitle = () => {\n      var separator = this.props.post.post_text.indexOf(\"~@~\");\n      this.state.title = this.props.post.post_text.substring(0, separator);\n      return this.state.title;\n    };\n\n    this.getCaption = () => {\n      var titleSep = this.props.post.post_text.indexOf(\"~@~\");\n      var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n\n      if (collabSep !== -1) {\n        //Some Collabs\n        this.state.caption = this.props.post.post_text.substring(titleSep + 3, collabSep);\n        return this.state.caption;\n      } else {\n        //No collabs\n        this.state.caption = this.props.post.post_text.substring(titleSep + 3, this.props.post.post_text.length);\n        return this.state.caption;\n      }\n    };\n\n    this.getCollab = () => {\n      var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n\n      if (collabSep !== -1) {\n        //Some Collabs\n        this.state.collab = this.props.post.post_text.substring(collabSep + 3, this.props.post.post_text.length);\n        return this.state.collab;\n      } else {\n        //No collabs\n        return \"\";\n      }\n    };\n\n    this.state = {\n      showModal: false,\n      comments: this.props.post.comment_flag,\n      title: \"\",\n      caption: \"\"\n    };\n    this.post = React.createRef();\n  }\n\n  getCommentCount() {\n    if (!this.state.comments || this.state.comments === \"0\") {\n      return 0;\n    }\n\n    return parseInt(this.state.comments);\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n\n    return \"comments hide\";\n  }\n\n  conditionalDisplay() {\n    console.log(\"Parent is \" + this.props.post.parent_id);\n\n    if (this.props.post.parent_id) {\n      return \"\";\n    } else {\n      return React.createElement(\"div\", {\n        className: \"comment-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-indicator-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.getCommentCount(), \" Comments\"), React.createElement(\"img\", {\n        src: require(\"../Images/comment.svg\"),\n        className: \"comment-icon\",\n        onClick: e => this.showModal(),\n        alt: \"View Comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.showHideComments(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CommentForm, {\n        onAddComment: this.setCommentCount,\n        parent: this.props.post.post_id,\n        commentCount: this.getCommentCount(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }\n\n  render() {\n    // console.log(this.props);\n    let defaultPic = require(\"../Images/defaultPic.jpg\"); // console.log(\"THIS IS TITLE: \", this.state.title);\n    // console.log(\"THIS IS BODY: \", this.state.caption);\n    // this.getTags();\n    // console.log(this.props.post);\n\n\n    if (!this.props.post.post_pic_url) {\n      return (// <div\n        //   key={this.props.post.post_id}\n        //   className={[this.props.type, \"postbody\"].join(\" \")}\n        // >\n        //   {this.props.post.name} {this.props.post.timestamp} <br />{\" \"}\n        //   {this.props.post.post_text}\n        //   {this.conditionalDisplay()}\n        // </div>\n        React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" row card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, this.props.post.name)), React.createElement(\"div\", {\n          className: \"row card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"post-img\",\n          src: defaultPic,\n          alt: \"post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \" row title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, this.getTitle())), React.createElement(\"div\", {\n          className: \"caption\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, this.getCaption()))), React.createElement(\"div\", {\n          className: \"row card-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"# \"), this.props.post.post_type))))\n      );\n    } else {\n      return (// <div\n        //   key={this.props.post.post_id}\n        //   className={[this.props.type, \"postbody\"].join(\" \")}\n        // >\n        //   {this.props.post.name} {this.props.post.timestamp} <br />{\" \"}\n        //   {this.props.post.post_text}\n        //   {this.conditionalDisplay()}\n        // </div>\n        React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" row card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, this.props.post.name)), React.createElement(\"div\", {\n          className: \"row card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"post-img\",\n          src: this.props.post.post_pic_url,\n          alt: \"post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \" row title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, this.getTitle())), React.createElement(\"div\", {\n          className: \"caption\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, this.getCaption()))), React.createElement(\"div\", {\n          className: \"row card-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"# \"), this.props.post.post_type)))) // </div>\n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/anthonyhom/Documents/atam-web/src/Component/ExPosts.js"],"names":["React","CommentForm","ExPost","Component","constructor","props","showModal","e","setState","state","setCommentCount","newcount","comments","getTitle","separator","post","post_text","indexOf","title","substring","getCaption","titleSep","collabSep","caption","length","getCollab","collab","comment_flag","createRef","getCommentCount","parseInt","showHideComments","conditionalDisplay","console","log","parent_id","require","post_id","render","defaultPic","post_pic_url","name","post_type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport CommentForm from \"./CommentForm.js\";\n\nexport default class ExPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      comments: this.props.post.comment_flag,\n      title: \"\",\n      caption: \"\",\n    };\n    this.post = React.createRef();\n  }\n\n  showModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  };\n\n  setCommentCount = (newcount) => {\n    this.setState({\n      comments: newcount,\n    });\n  };\n\n  getCommentCount() {\n    if (!this.state.comments || this.state.comments === \"0\") {\n      return 0;\n    }\n    return parseInt(this.state.comments);\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n    return \"comments hide\";\n  }\n\n  conditionalDisplay() {\n    console.log(\"Parent is \" + this.props.post.parent_id);\n    if (this.props.post.parent_id) {\n      return \"\";\n    } else {\n      return (\n        <div className=\"comment-block\">\n          <div className=\"comment-indicator\">\n            <div className=\"comment-indicator-text\">\n              {this.getCommentCount()} Comments\n            </div>\n            <img\n              src={require(\"../Images/comment.svg\")}\n              className=\"comment-icon\"\n              onClick={(e) => this.showModal()}\n              alt=\"View Comments\"\n            />\n          </div>\n          <div className={this.showHideComments()}>\n            <CommentForm\n              onAddComment={this.setCommentCount}\n              parent={this.props.post.post_id}\n              commentCount={this.getCommentCount()}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  getTitle = () => {\n    var separator = this.props.post.post_text.indexOf(\"~@~\");\n    this.state.title = this.props.post.post_text.substring(0, separator);\n    return this.state.title;\n  };\n\n  getCaption = () => {\n    var titleSep = this.props.post.post_text.indexOf(\"~@~\");\n    var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n    if (collabSep !== -1) {\n      //Some Collabs\n      this.state.caption = this.props.post.post_text.substring(\n        titleSep + 3,\n        collabSep\n      );\n      return this.state.caption;\n    } else {\n      //No collabs\n      this.state.caption = this.props.post.post_text.substring(\n        titleSep + 3,\n        this.props.post.post_text.length\n      );\n      return this.state.caption;\n    }\n  };\n\n  getCollab = () => {\n    var collabSep = this.props.post.post_text.indexOf(\"~*~\");\n    if (collabSep !== -1) {\n      //Some Collabs\n      this.state.collab = this.props.post.post_text.substring(\n        collabSep + 3,\n        this.props.post.post_text.length\n      );\n      return this.state.collab;\n    } else {\n      //No collabs\n      return \"\";\n    }\n  };\n\n  render() {\n    // console.log(this.props);\n\n    let defaultPic = require(\"../Images/defaultPic.jpg\");\n\n    // console.log(\"THIS IS TITLE: \", this.state.title);\n    // console.log(\"THIS IS BODY: \", this.state.caption);\n    // this.getTags();\n\n    // console.log(this.props.post);\n    if (!this.props.post.post_pic_url) {\n      return (\n        // <div\n        //   key={this.props.post.post_id}\n        //   className={[this.props.type, \"postbody\"].join(\" \")}\n        // >\n        //   {this.props.post.name} {this.props.post.timestamp} <br />{\" \"}\n        //   {this.props.post.post_text}\n        //   {this.conditionalDisplay()}\n        // </div>\n\n        <div className=\"card\">\n          <div className=\" row card-header\">\n            <div className=\"username\">{this.props.post.name}</div>\n          </div>\n          <div className=\"row card-body\">\n            <img className=\"post-img\" src={defaultPic} alt=\"post\" />\n            <div className=\" row title\">\n              <h4>{this.getTitle()}</h4>\n            </div>\n            <div className=\"caption\">\n              <p>{this.getCaption()}</p>\n            </div>\n          </div>\n          <div className=\"row card-footer\">\n            <div className=\"tag\">\n              <p>\n                <b># </b>\n                {this.props.post.post_type}\n              </p>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        // <div\n        //   key={this.props.post.post_id}\n        //   className={[this.props.type, \"postbody\"].join(\" \")}\n        // >\n        //   {this.props.post.name} {this.props.post.timestamp} <br />{\" \"}\n        //   {this.props.post.post_text}\n        //   {this.conditionalDisplay()}\n        // </div>\n\n        <div className=\"card\">\n          <div className=\" row card-header\">\n            <div className=\"username\">{this.props.post.name}</div>\n          </div>\n          <div className=\"row card-body\">\n            <img\n              className=\"post-img\"\n              src={this.props.post.post_pic_url}\n              alt=\"post\"\n            />\n            <div className=\" row title\">\n              <h4>{this.getTitle()}</h4>\n            </div>\n            <div className=\"caption\">\n              <p>{this.getCaption()}</p>\n            </div>\n          </div>\n          <div className=\"row card-footer\">\n            <div className=\"tag\">\n              <p>\n                <b># </b>\n                {this.props.post.post_type}\n              </p>\n            </div>\n            {/* <div className=\"interact-group\">\n            Like Button\n            <button className=\"interact-button\">\n              <img\n                alt=\"\"\n                src={require(\"../Images/star.svg\")}\n                className=\"button-icon\"\n                // onClick={e => setMenuOption(\"main\", mainContent, e)}\n              />\n            </button> */}\n            {/* Comment Button */}\n            {/* <button className=\"interact-button\">\n              <img\n                alt=\"\"\n                src={require(\"../Images/comment.svg\")}\n                className=\"button-icon\"\n                // onClick={}\n              />\n            </button> */}\n          </div>\n        </div>\n        // </div>\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}